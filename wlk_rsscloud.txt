# wlk_rsscloud v0.2
# A down and dirty RSSCloud plugin.
# Walker Hamilton
# http://walkerhamilton.com

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YToxMDp7czo3OiJ2ZXJzaW9uIjtzOjM6IjAuMiI7czo2OiJhdXRob3IiO3M6MTU6IldhbGtl
ciBIYW1pbHRvbiI7czoxMDoiYXV0aG9yX3VyaSI7czoyNToiaHR0cDovL3dhbGtlcmhhbWls
dG9uLmNvbSI7czoxMToiZGVzY3JpcHRpb24iO3M6MzM6IkEgZG93biBhbmQgZGlydHkgUlNT
Q2xvdWQgcGx1Z2luLiI7czo0OiJ0eXBlIjtpOjE7czo1OiJmbGFncyI7aToyO3M6NDoibmFt
ZSI7czoxMjoid2xrX3Jzc2Nsb3VkIjtzOjQ6ImhlbHAiO3M6MzM3OiIJPGgyPkFib3V0PC9o
Mj4KCgk8cD5UaGlzIGlzIGRvd24gYW5kIGRpcnR5IDxzcGFuIGNsYXNzPSJjYXBzIj5SU1ND
PC9zcGFuPmxvdWQgcGx1Z2luLjwvcD4KCgk8aDI+SW5zdGFsbGF0aW9uIGFuZCBVc2U8L2gy
PgoKCTxwPklmIHlvdSYjODIxNzt2ZSBpbnN0YWxsZWQgYW5kIGFjdGl2YXRlZCBpdCwgeW91
JiM4MjE3O3JlIHJlYWR5IHRvIGdvLjwvcD4KCgk8aDI+VGhhbmtzPC9oMj4KCgk8cD5Tb21l
IG9mIHRoZSBjb2RlIGlzIGhlYXZpbHkgYmFzZWQgb24gd29yayBieSBKb3NlcGggU2NvdHQg
KGh0dHA6Ly9qb3NlcGhzY290dC5vcmcvKSBvbiB0aGUgV29yZHByZXNzIHBsdWdpbi48L3A+
IjtzOjQ6ImNvZGUiO3M6MTY1MDY6IgpyZWdpc3Rlcl9jYWxsYmFjaygnd2xrX3Jzc2Nsb3Vk
X2hlYWQnLCAncnNzX2hlYWQnKTsKcmVnaXN0ZXJfY2FsbGJhY2soJ3dsa19yc3NjbG91ZF9u
b3RpZmljYXRpb25fYWN0aXZhdGlvbicsICdwcmV0ZXh0Jyk7CgppZihAdHhwaW50ZXJmYWNl
ID09ICdhZG1pbicpCnsKCXJlZ2lzdGVyX2NhbGxiYWNrKCd3bGtfcnNzY2xvdWRfaW5zdGFs
bCcsICdwbHVnaW5fbGlmZWN5Y2xlLndsa19yc3NjbG91ZCcsICdpbnN0YWxsZWQnKTsKCXJl
Z2lzdGVyX2NhbGxiYWNrKCd3bGtfcnNzY2xvdWRfZGVsZXRlJywgJ3BsdWdpbl9saWZlY3lj
bGUud2xrX3Jzc2Nsb3VkJywgJ2RlbGV0ZWQnKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKCd3bGtf
cnNzY2xvdWRfbGFuZ3VhZ2UnLCAnYWRtaW5fc2lkZScsICdwYWdldG9wJyk7CglyZWdpc3Rl
cl9jYWxsYmFjaygnd2xrX3Jzc2Nsb3VkX3NjaGVkdWxlJywgJ2FydGljbGUnLCAnZWRpdCcp
Owp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfc2NoZWR1bGUoKSB7CgkkcmMgPSBuZXcgV2xr
UnNzQ2xvdWRDbGFzcygpOwoJJHJjLT5zY2hlZHVsZV9wb3N0X25vdGlmaWNhdGlvbnMoKTsK
fQoKZnVuY3Rpb24gd2xrX3Jzc2Nsb3VkX2hlYWQoKSB7CglyZXR1cm4gV2xrUnNzQ2xvdWRD
bGFzczo6aGVhZCgpOwp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfbm90aWZpY2F0aW9uX2Fj
dGl2YXRpb24oKSB7CglpZihpc3NldCgkX0dFVFsncnNzY2xvdWQnXSkgJiYgJF9HRVRbJ3Jz
c2Nsb3VkJ109PSdub3RpZnknKSB7CgkJJHJjID0gbmV3IFdsa1Jzc0Nsb3VkQ2xhc3MoKTsK
CQkkcmMtPmh1Yl9wcm9jZXNzX25vdGlmaWNhdGlvbl9yZXF1ZXN0KCk7CgkJZXhpdCgpOwoJ
fQp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfaW5zdGFsbCgpIHsKCVdsa1Jzc0Nsb3VkQ2xh
c3M6Omluc3RhbGwoKTsKfQoKZnVuY3Rpb24gd2xrX3Jzc2Nsb3VkX2RlbGV0ZSgpIHsKCVds
a1Jzc0Nsb3VkQ2xhc3M6OmRlbGV0ZSgpOwp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfZmVl
ZHMoKQp7CgkkcmMgPSBuZXcgV2xrUnNzQ2xvdWRDbGFzcygpOwoJcmV0dXJuICRyYy0+ZmVl
ZEREKCk7Cn0KCmZ1bmN0aW9uIHdsa19yc3NjbG91ZF9mYWlsdXJlcygpIHsKCWdsb2JhbCAk
cHJlZnM7CgkkdmFscyA9IGFycmF5KAoJCTUgPT4gNSwKCQkxMCA9PiAxMCwKCQkxNSA9PiAx
NSwKCQkyMCA9PiAyMAoJKTsKCSRuYW1lID0gJ3dsa19yc3NjbG91ZF9tYXhfZmFpbHVyZXMn
OwoJcmV0dXJuIHNlbGVjdElucHV0KCRuYW1lLCAkdmFscywgJHByZWZzWyd3bGtfcnNzY2xv
dWRfbWF4X2ZhaWx1cmVzJ10sICcnLCAnJywgJG5hbWUpOwp9CgpmdW5jdGlvbiB3bGtfcnNz
Y2xvdWRfbGFuZ3VhZ2UoKSB7CgkkcmMgPSBuZXcgV2xrUnNzQ2xvdWRDbGFzcygpOwp9Cgov
LwpjbGFzcyBXbGtSc3NDbG91ZENsYXNzIHsKCXZhciAkdmFycyA9IGFycmF5KAoJCSdub3Rp
ZmljYXRpb25zX2luc3RhbnQnID0+IHRydWUsCgkJJ3VzZXJfYWdlbnQnID0+ICdUZXh0cGF0
dGVybi9SU1NDbG91ZCAwLjInLAoJCSdtYXhfZmFpbHVyZXMnID0+IDUsCgkJJ3RpbWVvdXQn
ID0+IDMKCSk7CgoJZnVuY3Rpb24gX19jb25zdHJ1Y3QoKSB7CgkJZ2xvYmFsICRwcmVmcywg
JHRleHRhcnJheTsKCgkJaWYoJHByZWZzWydsYW5ndWFnZSddPT0nZW4tdXMnKSB7CgkJCSR0
ZXh0YXJyYXlbJ3dsa19yc3NjbG91ZCddID0gJ1JTU0Nsb3VkJzsKCQkJJHRleHRhcnJheVsn
cnNzY2xvdWRfc3RhbmRhcmQnXSA9ICdTdGFuZGFyZCBmZWVkcyc7CgkJCSR0ZXh0YXJyYXlb
J3Jzc2Nsb3VkX2JvdGgnXSA9ICdCb3RoIHN0YW5kYXJkIGZlZWRzICYgdGhlIGN1c3RvbSBm
ZWVkJzsKCQkJJHRleHRhcnJheVsncnNzY2xvdWRfY3VzdG9tX29ubHknXSA9ICdDdXN0b20g
ZmVlZCBvbmx5JzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Nsb3VkX25vdGlmaWNhdGlvbnNf
aW5zdGFudCddID0gJ0luc3RhbnQgbm90aWZpY2F0aW9ucz8gKCJObyIgcmVxdWlyZXMgd2xr
X2Nyb24pJzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Nsb3VkX21heF9mYWlsdXJlcyddID0g
J01heCAjIG9mIGZhaWx1cmVzJzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Nsb3VkX2ZlZWRz
J10gPSAnU2V0IHR5cGUgb2YgZmVlZHMgaW4gdXNlJzsKCQkJJHRleHRhcnJheVsnd2xrX3Jz
c2Nsb3VkX3RpbWVvdXQnXSA9ICdUaW1lb3V0JzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Ns
b3VkX3VzZXJfYWdlbnQnXSA9ICdVc2VyLWFnZW50JzsKCQkJJHRleHRhcnJheVsnd2xrX3Jz
c2Nsb3VkX2N1c3RvbV91cmwnXSA9ICdDdXN0b20gZmVlZCBVUkwnOwoJCX0KCgkJaWYoaXNz
ZXQoJHByZWZzWyd3bGtfcnNzY2xvdWRfbm90aWZpY2F0aW9uc19pbnN0YW50J10pICYmICFl
bXB0eSgkcHJlZnNbJ3dsa19yc3NjbG91ZF9ub3RpZmljYXRpb25zX2luc3RhbnQnXSkpIHsg
JHRoaXMtPnZhcnNbJ25vdGlmaWNhdGlvbnNfaW5zdGFudCddID0gKGJvb2wpJHByZWZzWyd3
bGtfcnNzY2xvdWRfbm90aWZpY2F0aW9uc19pbnN0YW50J107IH0KCQlpZihpc3NldCgkcHJl
ZnNbJ3dsa19yc3NjbG91ZF9tYXhfZmFpbHVyZXMnXSkgJiYgIWVtcHR5KCRwcmVmc1snd2xr
X3Jzc2Nsb3VkX21heF9mYWlsdXJlcyddKSkgeyAkdGhpcy0+dmFyc1snbWF4X2ZhaWx1cmVz
J10gPSAoaW50KSRwcmVmc1snd2xrX3Jzc2Nsb3VkX21heF9mYWlsdXJlcyddOyB9CgkJaWYo
aXNzZXQoJHByZWZzWyd3bGtfcnNzY2xvdWRfdGltZW91dCddKSAmJiAhZW1wdHkoJHByZWZz
Wyd3bGtfcnNzY2xvdWRfdGltZW91dCddKSkgeyAkdGhpcy0+dmFyc1sndGltZW91dCddID0g
KGludCkkcHJlZnNbJ3dsa19yc3NjbG91ZF90aW1lb3V0J107IH0KCQlpZihpc3NldCgkcHJl
ZnNbJ3dsa19yc3NjbG91ZF91c2VyX2FnZW50J10pICYmICFlbXB0eSgkcHJlZnNbJ3dsa19y
c3NjbG91ZF91c2VyX2FnZW50J10pKSB7ICR0aGlzLT52YXJzWyd1c2VyX2FnZW50J10gPSAk
cHJlZnNbJ3dsa19yc3NjbG91ZF91c2VyX2FnZW50J107IH0KCQlpZihpc3NldCgkcHJlZnNb
J3dsa19yc3NjbG91ZF9jdXN0b21fdXJsJ10pICYmICFlbXB0eSgkcHJlZnNbJ3dsa19yc3Nj
bG91ZF9jdXN0b21fdXJsJ10pKSB7ICR0aGlzLT52YXJzWydjdXN0b21fdXJsJ10gPSAkcHJl
ZnNbJ3dsa19yc3NjbG91ZF9jdXN0b21fdXJsJ107IH0KCX0KCglmdW5jdGlvbiBXbGtSc3ND
bG91ZENsYXNzKCkgewoJCSR0aGlzLT5fX2NvbnN0cnVjdCgpOwoJfQoKCWZ1bmN0aW9uIGZl
ZWRERCgpIHsKCQlnbG9iYWwgJHByZWZzOwoJCSR2YWxzID0gYXJyYXkoCgkJCSdzdGFuZGFy
ZCcgPT4gZ1R4dCgncnNzY2xvdWRfc3RhbmRhcmQnKSwKCQkJJ2JvdGgnID0+IGdUeHQoJ3Jz
c2Nsb3VkX2JvdGgnKSwKCQkJJ2N1c3RvbV9vbmx5JyA9PiBnVHh0KCdyc3NjbG91ZF9jdXN0
b21fb25seScpLAoJCSk7CgkJJG5hbWUgPSAnd2xrX3Jzc2Nsb3VkX2ZlZWRzJzsKCQlyZXR1
cm4gc2VsZWN0SW5wdXQoJG5hbWUsICR2YWxzLCAkcHJlZnNbJ3dsa19yc3NjbG91ZF9mZWVk
cyddLCAnJywgJycsICRuYW1lKTsKCX0KCgkvKiBOZWVkZWQgSFRUUCBTdHVmZiAtIFNob3Vs
ZCByZWFsbHkgY3JlYXRlIGEgIzIgbGlicmFyeSBwbHVnaW4gZm9yIHRoaXMqLwoJZnVuY3Rp
b24gcmVtb3RlX3Bvc3QoJHVybCwgJGFyZ3MgPSBhcnJheSgpKSB7CgkJJGRlZmF1bHRzID0g
YXJyYXkoCgkJCSdtZXRob2QnID0+ICdwb3N0JywKCQkJJ2JvZHknID0+IGFycmF5KCksCgkJ
CSdvcHRpb25zJyA9PiBhcnJheSgncGF0aCc9PicvJywgJ3BvcnQnID0+IDgwKQoJCSk7CgoJ
CWlmKGlzc2V0KCRhcmdzWydvcHRpb25zJ10pKSB7CgkJCSRmaW5hbF9vcHRpb25zID0gYXJy
YXlfbWVyZ2UoJGRlZmF1bHRzWydvcHRpb25zJ10sICRhcmdzWydvcHRpb25zJ10pOwoJCX0g
ZWxzZSB7CgkJCSRmaW5hbF9vcHRpb25zID0gJGRlZmF1bHRzWydvcHRpb25zJ107CgkJfQoJ
CSRmaW5hbF9hcmdzID0gYXJyYXlfbWVyZ2UoJGRlZmF1bHRzLCAkYXJncyk7CgkJJGZpbmFs
X2FyZ3NbJ29wdGlvbnMnXSA9ICRmaW5hbF9vcHRpb25zOwoJCSRhcmdzID0gJGZpbmFsX2Fy
Z3M7CgoJCSRyZXN1bHQgPSBhcnJheSgpOwoKCQkvLyBUT0RPOiBTaG91bGQgcmVhbGx5IG1h
a2UgZm9wZW4sIGZzb2Nrb3BlbiwgJiBleHRodHRwIHdvcmsuLi4KCQlpZihmdW5jdGlvbl9l
eGlzdHMoJ2N1cmxfaW5pdCcpICYmIGZ1bmN0aW9uX2V4aXN0cygnY3VybF9leGVjJykpIHsK
CQkJJGN1cmwgPSBjdXJsX2luaXQoc3RyX3JlcGxhY2UoJy8vJywgJy8nLCAkdXJsLiRhcmdz
WydvcHRpb25zJ11bJ3BhdGgnXSkpOwoJCQljdXJsX3NldG9wdCgkY3VybCwgQ1VSTE9QVF9V
U0VSQUdFTlQsICR0aGlzLT52YXJzWyd1c2VyX2FnZW50J10pOwoJCQljdXJsX3NldG9wdCgk
Y3VybCwgQ1VSTE9QVF9QT1NULCAxKTsKCQkJY3VybF9zZXRvcHQoJGN1cmwsIENVUkxPUFRf
UE9TVEZJRUxEUywgJGZpbmFsX2FyZ3NbJ2JvZHknXSk7CgkJCWN1cmxfc2V0b3B0KCRjdXJs
LCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCAxKTsKCQkJY3VybF9zZXRvcHQoJGN1cmwsIENV
UkxPUFRfVElNRU9VVCwgJHRoaXMtPnZhcnNbJ3RpbWVvdXQnXSk7CgkJCSRyZXN1bHRbJ3Jl
c3BvbnNlJ10gPSBjdXJsX2V4ZWMoJGN1cmwpOwoJCQkkcmVzdWx0Wydjb2RlJ10gPSBjdXJs
X2dldGluZm8oJGN1cmwsIENVUkxJTkZPX0hUVFBfQ09ERSk7CgkJCWN1cmxfY2xvc2UoJGN1
cmwpOwoJCX0gLy8gZWxzZSBpZihmdW5jdGlvbl9leGlzdHMoJ2Zzb2Nrb3BlbicpKSB7CgkJ
Ly8gCXJldHVybiAkdGhpcy0+X2Zzb2NrX3Bvc3QoJ2h0dHAnLCAkZmluYWxfYXJnc1sndXJs
J10sICRmaW5hbF9hcmdzWydvcHRpb25zJ11bJ3BvcnQnXSwgJGZpbmFsX2FyZ3NbJ29wdGlv
bnMnXVsncGF0aCddLCAkZmluYWxfYXJnc1snYm9keSddKTsKCQkvLyB9IGVsc2UgaWYoZnVu
Y3Rpb25fZXhpc3RzKCdodHRwX3JlcXVlc3QnKSkgewoJCS8vIAlyZXR1cm4gaHR0cF9yZXF1
ZXN0KCRmaW5hbF9hcmdzWydtZXRob2QnfSwgJGZpbmFsX2FyZ3NbJ3VybCddLCAkZmluYWxf
YXJnc1snYm9keSddLCAkZmluYWxfYXJnc1snb3B0aW9ucyddKTsKCQkvLyB9Cgl9CgoJLy8g
ZnVuY3Rpb24gX2Zzb2NrX3Bvc3QoJHR5cGUsJGhvc3QsJHBvcnQ9JzgwJywkcGF0aD0nLycs
JGRhdGE9JycpIHsKCS8vIAkkX2VyciA9ICdsaWIgc29ja2V0czo6Jy5fX0ZVTkNUSU9OX18u
JygpOiAnOwoJLy8gCXN3aXRjaCgkdHlwZSkgeyBjYXNlICdodHRwJzogJHR5cGUgPSAnJzsg
Y2FzZSAnc3NsJzogY29udGludWU7IGRlZmF1bHQ6IGRpZSgkX2Vyci4nYmFkICR0eXBlJyk7
IH0gaWYoIWN0eXBlX2RpZ2l0KCRwb3J0KSkgZGllKCRfZXJyLidiYWQgcG9ydCcpOwoJLy8g
CWlmKCFlbXB0eSgkZGF0YSkpIGZvcmVhY2goJGRhdGEgQVMgJGsgPT4gJHYpICRzdHIgLj0g
dXJsZW5jb2RlKCRrKS4nPScudXJsZW5jb2RlKCR2KS4nJic7ICRzdHIgPSBzdWJzdHIoJHN0
ciwwLC0xKTsKCS8vCgkvLyAJJGZwID0gZnNvY2tvcGVuKCRob3N0LCRwb3J0LCRlcnJubywk
ZXJyc3RyLCR0aW1lb3V0PTMwKTsKCS8vIAlpZighJGZwKSBkaWUoJF9lcnIuJGVycnN0ci4k
ZXJybm8pOyBlbHNlIHsKCS8vIAkJZndyaXRlKCRmcCwgIlBPU1QgJHBhdGggSFRUUC8xLjFc
clxuIik7CgkvLyAJCWZ3cml0ZSgkZnAsICJIb3N0OiAkaG9zdFxyXG4iKTsKCS8vIAkJZndy
aXRlKCRmcCwgIlVzZXItQWdlbnQ6ICIuJHRoaXMtPnZhcnNbJ3VzZXJfYWdlbnQnXS4iXHJc
biIpOwoJLy8gCQlmd3JpdGUoJGZwLCAiQ29udGVudC10eXBlOiBhcHBsaWNhdGlvbi94LXd3
dy1mb3JtLXVybGVuY29kZWRcclxuIik7CgkvLyAJCWZ3cml0ZSgkZnAsICJDb250ZW50LWxl
bmd0aDogIi5zdHJsZW4oJHN0cikuIlxyXG4iKTsKCS8vIAkJZndyaXRlKCRmcCwgIkNvbm5l
Y3Rpb246IGNsb3NlXHJcblxyXG4iKTsKCS8vIAkJZndyaXRlKCRmcCwgJHN0ci4iXHJcblxy
XG4iKTsKCS8vCgkvLyAJCXdoaWxlKCFmZW9mKCRmcCkpICRkIC49IGZnZXRzKCRmcCw0MDk2
KTsKCS8vIAkJZmNsb3NlKCRmcCk7CgkvLyAJfQoJLy8gCXJldHVybiAkZDsKCS8vIH0KCglm
dW5jdGlvbiBoZWFkKCkgewoJCSRjbG91ZCA9IHBhcnNlX3VybChodS4nP3Jzc2Nsb3VkPW5v
dGlmeScpOwoJCSRjbG91ZFsncG9ydCddID0gKGludCkgJGNsb3VkWydwb3J0J107CgoJCWlm
KGVtcHR5KCAkY2xvdWRbJ3BvcnQnXSkpIHsgJGNsb3VkWydwb3J0J10gPSA4MDsgfQoKCQkk
Y2xvdWRbJ3BhdGgnXSAuPSAiP3skY2xvdWRbJ3F1ZXJ5J119IjsKCQkkY2xvdWRbJ2hvc3Qn
XSA9IHN0cnRvbG93ZXIoICRjbG91ZFsnaG9zdCddICk7CgoJCXJldHVybiAiPGNsb3VkIGRv
bWFpbj0neyRjbG91ZFsnaG9zdCddfScgcG9ydD0neyRjbG91ZFsncG9ydCddfScgcGF0aD0n
eyRjbG91ZFsncGF0aCddfScgcmVnaXN0ZXJQcm9jZWR1cmU9JycgcHJvdG9jb2w9J2h0dHAt
cG9zdCcgLz4iLiJcbiI7Cgl9CgoJZnVuY3Rpb24gbm90aWZ5X3Jlc3VsdCgkc3VjY2Vzcywg
JG1zZykgewoJCWhlYWRlcignQ29udGVudC1UeXBlOiB0ZXh0L3htbCcpOwoJCWVjaG8gIjw/
eG1sIHZlcnNpb249JzEuMCciLiI/Ii4iPiIuIlxuIjsKCQllY2hvICI8bm90aWZ5UmVzdWx0
IHN1Y2Nlc3M9J3skc3VjY2Vzc30nIG1zZz0neyRtc2d9JyAvPlxuIjsKCQlleGl0OwoJfQoK
CWZ1bmN0aW9uIHNjaGVkdWxlX3Bvc3Rfbm90aWZpY2F0aW9ucygpIHsKCQlpZigkdGhpcy0+
dmFyc1snbm90aWZpY2F0aW9uc19pbnN0YW50J10gJiYgZnVuY3Rpb25fZXhpc3RzKCd3bGtf
Y3Jvbl9zaW5nbGVfZXZlbnQnKSkgewoJCQkvLyBUT0RPOiBjcmVhdGUgd2xrX2Nyb24gUGx1
Z2luCgkJCXdsa19jcm9uX3NpbmdsZV9ldmVudCh0aW1lKCksICdzZW5kX3Bvc3Rfbm90aWZp
Y2F0aW9uc19hY3Rpb24nKTsKCQl9IGVsc2UgewoJCQkkdGhpcy0+c2VuZF9wb3N0X25vdGlm
aWNhdGlvbnMoKTsKCQl9Cgl9CgoJZnVuY3Rpb24gc2VuZF9wb3N0X25vdGlmaWNhdGlvbnMo
KSB7CgkJZ2xvYmFsICRwcmVmczsKCQkkc2VuZF91ZCA9IGZhbHNlOwoJCWlmKCFlbXB0eSgk
X1BPU1QpICYmIGlzc2V0KCRfUE9TVFsnSUQnXSkpIHsKCQkJaWYoaXNfbnVtZXJpYygkX1BP
U1RbJ0lEJ10pKSB7CgkJCQkkYSA9IHNhZmVfcm93KCdTdGF0dXMnLCAndGV4dHBhdHRlcm4n
LCAnSUQ9Jy5pbnR2YWwoJGlkKSk7CgkJCQlpZiAoJGEpIHsKCQkJCQlpZigkdUV4cGlyZXMg
YW5kIHRpbWUoKSA+ICR1RXhwaXJlcyBhbmQgISRwcmVmc1sncHVibGlzaF9leHBpcmVkX2Fy
dGljbGVzJ10pIHsKCQkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJCQkJcmV0dXJuOwoJCQkJ
CX0KCQkJCQlpZigoJGFbJ1N0YXR1cyddIT00IHx8ICRhWydTdGF0dXMnXSE9NSkgJiYgKCRf
UE9TVFsnU3RhdHVzJ109PTQgfHwgJF9QT1NUWydTdGF0dXMnXT09NSkpIHsKCQkJCQkJLy8g
c3RhdHVzIGNoYW5nZWQgdG8gcHVibGlzaGVkCgkJCQkJCSRzZW5kX3VkID0gdHJ1ZTsKCQkJ
CQl9IGVsc2UgewoJCQkJCQkvLyBzdGF0dXMgZGlkbid0IGNoYW5nZSB0byBwdWJsaXNoZWQK
CQkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJCQkJcmV0dXJuOwoJCQkJCX0KCQkJCX0gZWxz
ZSB7CgkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJCX0KCQkJfSBlbHNlIGlmKCghaXNfbnVt
ZXJpYygkX1BPU1RbJ0lEJ10pIHx8IGVtcHR5KCRfUE9TVFsnSUQnXSkpICYmICgkX1BPU1Rb
J1N0YXR1cyddPT00IHx8ICRfUE9TVFsnU3RhdHVzJ109PTUpKSB7CgkJCQlpZighJHRoaXMt
PmV4cGlyZWQoJF9QT1NUKSAmJiAkdGhpcy0+cHVibGlzaGVkKCRfUE9TVCkpIHsKCQkJCQkk
c2VuZF91ZCA9IHRydWU7CgkJCQl9IGVsc2UgaWYoISR0aGlzLT5leHBpcmVkKCRfUE9TVCkg
JiYgISR0aGlzLT5wdWJsaXNoZWQoJF9QT1NUKSkgewoJCQkJCS8vIFRPRE86IFNldCBjcm9u
CgkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJCQlyZXR1cm47CgkJCQl9CgkJCX0gZWxzZSB7
CgkJCQkvLyBlcnJvciEKCQkJCSRzZW5kX3VkID0gZmFsc2U7CgkJCQlyZXR1cm47CgkJCX0K
CQl9CgoJCWlmKCRzZW5kX3VkKSB7CgkJCSR1cmxzID0gYXJyYXkoKTsKCgkJCWlmKCRwcmVm
c1snd2xrX3Jzc2Nsb3VkX2ZlZWRzJ109PSdjdXN0b21fb25seScgfHwgJHByZWZzWyd3bGtf
cnNzY2xvdWRfZmVlZHMnXT09J2JvdGgnKSB7CgkJCQkkdXJsc1tdID0gJHByZWZzWydjdXN0
b21fdXJsJ107CgkJCX0KCgkJCWlmKCRwcmVmc1snd2xrX3Jzc2Nsb3VkX2ZlZWRzJ109PSdi
b3RoJyB8fCAkcHJlZnNbJ3dsa19yc3NjbG91ZF9mZWVkcyddPT0nc3RhbmRhcmQnKSB7CgkJ
CQkvLyBnZXQgdGhlIHNlY3Rpb24sIGNhdGVnb3J5LCAmICJBbGwiCgkJCQkkZnJzID0gc2Fm
ZV9jb2x1bW4oIm5hbWUiLCAidHhwX3NlY3Rpb24iLCAiaW5fcnNzICE9ICcxJyIpOwoJCQkJ
aWYoaXNzZXQoJF9QT1NUWydTZWN0aW9uJ10pICYmIGluX2FycmF5KCRfUE9TVFsnU2VjdGlv
biddLCAkZnJzKSkgewoJCQkJCS8vIGNhbid0IHNlbmQgdGhhdCBzZWN0aW9uCgkJCQl9IGVs
c2UgewoJCQkJCS8vIGNvbnN0cnVjdCB0aGUgZmVlZCBVUkxzCgkJCQkJLy8gYWRkIHRvIHRo
ZSBVUkxzIGFycmF5CgkJCQkJJHVybHNbXSA9IGh1Lidyc3MvJzsKCgkJCQkJaWYoaXNzZXQo
JF9QT1NUWydTZWN0aW9uJ10pICYmICFlbXB0eSgkX1BPU1RbJ1NlY3Rpb24nXSkpIHsKCQkJ
CQkJJHVybHNbXSA9IGh1Lidyc3MvP3NlY3Rpb249Jy4kX1BPU1RbJ1NlY3Rpb24nXTsKCQkJ
CQl9CgoJCQkJCWlmKGlzc2V0KCRfUE9TVFsnQ2F0ZWdvcnkxJ10pICYmICFlbXB0eSgkX1BP
U1RbJ0NhdGVnb3J5MSddKSkgewoJCQkJCQkkdXJsc1tdID0gaHUuJ3Jzcy8/Y2F0ZWdvcnk9
Jy4kX1BPU1RbJ0NhdGVnb3J5MSddOwoJCQkJCQlpZihpc3NldCgkX1BPU1RbJ1NlY3Rpb24n
XSkgJiYgIWVtcHR5KCRfUE9TVFsnU2VjdGlvbiddKSkgewoJCQkJCQkJJHVybHNbXSA9IGh1
Lidyc3MvP3NlY3Rpb249Jy4kX1BPU1RbJ1NlY3Rpb24nXS4nJmNhdGVnb3J5PScuJF9QT1NU
WydDYXRlZ29yeTEnXTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJaWYoaXNzZXQoJF9QT1NUWydD
YXRlZ29yeTInXSkgJiYgIWVtcHR5KCRfUE9TVFsnQ2F0ZWdvcnkyJ10pKSB7CgkJCQkJCSR1
cmxzW10gPSBodS4ncnNzLz9jYXRlZ29yeT0nLiRfUE9TVFsnQ2F0ZWdvcnkyJ107CgkJCQkJ
CWlmKGlzc2V0KCRfUE9TVFsnU2VjdGlvbiddKSAmJiAhZW1wdHkoJF9QT1NUWydTZWN0aW9u
J10pKSB7CgkJCQkJCQkkdXJsc1tdID0gaHUuJ3Jzcy8/c2VjdGlvbj0nLiRfUE9TVFsnU2Vj
dGlvbiddLicmY2F0ZWdvcnk9Jy4kX1BPU1RbJ0NhdGVnb3J5MiddOwoJCQkJCQl9CgkJCQkJ
fQoJCQkJfQoJCQl9CgoJCQlpZighZW1wdHkoJHVybHMpKSB7CgkJCQkkZmVlZF9jb25kaXRp
b25fYXJyID0gYXJyYXkoKTsKCQkJCWZvcmVhY2goJHVybHMgYXMgJHVybCkgewoJCQkJCSRm
ZWVkX2NvbmRpdGlvbl9hcnJbXSA9ICdmZWVkX3VybD0iJy5hZGRzbGFzaGVzKCR1cmwpLici
JzsKCQkJCX0KCQkJCSRmZWVkX2NvbmRpdGlvbnMgPSBpbXBsb2RlKCcgT1IgJywgJGZlZWRf
Y29uZGl0aW9uX2Fycik7CgoJCQkJJG5vdGlmeSA9IHNhZmVfcm93cygnKicsICd0eHBfcnNz
Y2xvdWRfbm90aWZpY2F0aW9ucycsICcoJy4kZmVlZF9jb25kaXRpb25zLicpIEFORCBzdGF0
dXM9ImFjdGl2ZSInKTsKCgkJCQlmb3JlYWNoKCRub3RpZnkgYXMgJG4pCgkJCQl7CgkJCQkJ
aWYoJG5bJ3N0YXR1cyddID09ICdhY3RpdmUnKQoJCQkJCXsKCQkJCQkJaWYgKCRuWydwcm90
b2NvbCddID09ICdodHRwLXBvc3QnKQoJCQkJCQl7CgkJCQkJCQkkdXJsID0gcGFyc2VfdXJs
KCRuWydub3RpZnlfdXJsJ10pOwoJCQkJCQkJJHBvcnQgPSA4MDsKCQkJCQkJCWlmKCFlbXB0
eSgkdXJsWydwb3J0J10pKSB7ICRwb3J0ID0gJHVybFsncG9ydCddOyB9CgoJCQkJCQkJJHJl
c3VsdCA9ICR0aGlzLT5yZW1vdGVfcG9zdCgkblsnbm90aWZ5X3VybCddLCBhcnJheSgnbWV0
aG9kJyA9PiAnUE9TVCcsICdwb3J0JyA9PiAkcG9ydCwgJ2JvZHknID0+IGFycmF5KCd1cmwn
ID0+ICRuWydmZWVkX3VybCddKSkpOwoKCQkJCQkJCSRuZWVkX3VwZGF0ZSA9IGZhbHNlOwoJ
CQkJCQkJaWYoJHJlc3VsdFsnY29kZSddIT0yMDApCgkJCQkJCQl7CgkJCQkJCQkJJG5bJ2Zh
aWxfY291bnQnXSA9ICRuWydmYWlsX2NvdW50J10rMTsKCQkJCQkJCQlzYWZlX3VwZGF0ZSgn
dHhwX3Jzc2Nsb3VkX25vdGlmaWNhdGlvbnMnLCAnZmFpbF9jb3VudD0iJy4kblsnZmFpbF9j
b3VudCddLiciJywgJ2lkPSInLiRuWydpZCddLiciJyk7CgkJCQkJCQl9CgoJCQkJCQkJaWYo
JG5bJ2ZhaWxfY291bnQnXSA+ICR0aGlzLT52YXJzWydtYXhfZmFpbHVyZXMnXSkgewoJCQkJ
CQkJCXNhZmVfdXBkYXRlKCd0eHBfcnNzY2xvdWRfbm90aWZpY2F0aW9ucycsICdzdGF0dXM9
InN1c3BlbmRlZCInLCAnaWQ9IicuJG5bJ2lkJ10uJyInKTsKCQkJCQkJCX0KCQkJCQkJfQoJ
CQkJCX0KCQkJCX0gLy8gZm9yZWFjaAoJCQl9CgkJfQoJfQoKCWZ1bmN0aW9uIHB1Ymxpc2hl
ZCgkcG9zdCkgewoJCSR3aGVuX3RzID0gdGltZSgpOwoKCQlpZihpc3NldCgkcG9zdFsncmVz
ZXRfdGltZSddKSkgewoJCQlyZXR1cm4gdHJ1ZTsKCQl9IGVsc2UgewoJCQlpZiAoIWlzX251
bWVyaWMoJHBvc3RbJ3llYXInXSkgfHwgIWlzX251bWVyaWMoJHBvc3RbJ21vbnRoJ10pIHx8
ICFpc19udW1lcmljKCRwb3N0WydkYXknXSkgfHwgIWlzX251bWVyaWMoJHBvc3RbJ2hvdXIn
XSkgIHx8ICFpc19udW1lcmljKCRwb3N0WydtaW51dGUnXSkgfHwgIWlzX251bWVyaWMoJHBv
c3RbJ3NlY29uZCddKSApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCQkkdHMgPSBzdHJ0
b3RpbWUoJHBvc3RbJ3llYXInXS4nLScuJHBvc3RbJ21vbnRoJ10uJy0nLiRwb3N0WydkYXkn
XS4nICcuJHBvc3RbJ2hvdXInXS4nOicuJHBvc3RbJ21pbnV0ZSddLic6Jy4kcG9zdFsnc2Vj
b25kJ10pOwoJCQlpZiAoJHRzID09PSBmYWxzZSB8fCAkdHMgPT09IC0xKSB7CgkJCQlyZXR1
cm4gZmFsc2U7CgkJCX0KCgkJCSR3aGVuID0gJHdoZW5fdHMgPSAkdHMgLSB0el9vZmZzZXQo
JHRzKTsKCgkJCWlmKCR3aGVuPD10aW1lKCkpCgkJCQlyZXR1cm4gdHJ1ZTsKCQkJZWxzZQoJ
CQkJcmV0dXJuIGZhbHNlOwoJCX0KCX0KCglmdW5jdGlvbiBleHBpcmVkKCRwb3N0KSB7CgkJ
aWYoaXNzZXQoJHBvc3RbJ2V4cF95ZWFyJ10pICYmICFlbXB0eSgkcG9zdFsnZXhwX3llYXIn
XSkpIHsKCQkJaWYoZW1wdHkoJHBvc3RbJ2V4cF9tb250aCddKSkgJHBvc3RbJ2V4cF9tb250
aCddPTE7CgkJCWlmKGVtcHR5KCRwb3N0WydleHBfZGF5J10pKSAkcG9zdFsnZXhwX2RheSdd
PTE7CgkJCWlmKGVtcHR5KCRwb3N0WydleHBfaG91ciddKSkgJHBvc3RbJ2V4cF9ob3VyJ109
MDsKCQkJaWYoZW1wdHkoJHBvc3RbJ2V4cF9taW51dGUnXSkpICRwb3N0WydleHBfbWludXRl
J109MDsKCQkJaWYoZW1wdHkoJHBvc3RbJ2V4cF9zZWNvbmQnXSkpICRwb3N0WydleHBfc2Vj
b25kJ109MDsKCgkJCSR0cyA9IHN0cnRvdGltZSgkcG9zdFsnZXhwX3llYXInXS4nLScuJHBv
c3RbJ2V4cF9tb250aCddLictJy4kcG9zdFsnZXhwX2RheSddLicgJy4kcG9zdFsnZXhwX2hv
dXInXS4nOicuJHBvc3RbJ2V4cF9taW51dGUnXS4nOicuJHBvc3RbJ2V4cF9zZWNvbmQnXSk7
CgkJCSRleHBpcmVzID0gJHRzIC0gdHpfb2Zmc2V0KCR0cyk7CgoJCQlpZigkZXhwaXJlczw9
dGltZSgpKQoJCQkJcmV0dXJuIHRydWU7CgkJCWVsc2UKCQkJCXJldHVybiBmYWxzZTsKCQl9
IGVsc2UgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJfQoKCWZ1bmN0aW9uIGh1Yl9wcm9jZXNz
X25vdGlmaWNhdGlvbl9yZXF1ZXN0KCkgewoJCWdsb2JhbCAkcHJlZnM7CgoJCS8vIE11c3Qg
cHJvdmlkZSBhdCBsZWFzdCBvbmUgVVJMIHRvIGdldCBub3RpZmljYXRpb25zIGFib3V0CgkJ
aWYoaXNzZXQoJF9QT1NUWyd1cmwxJ10pICYmIGVtcHR5KCRfUE9TVFsndXJsMSddKSkKCQkJ
JHRoaXMtPm5vdGlmeV9yZXN1bHQoJ2ZhbHNlJywgJ05vIGZlZWQgZm9yIHVybDEuJyk7CgoJ
CS8vIE9ubHkgc3VwcG9ydCBodHRwLXBvc3QKCQkkcHJvdG9jb2wgPSAnaHR0cC1wb3N0JzsK
CQlpZihpc3NldCgkX1BPU1RbJ3Byb3RvY29sJ10pICYmICFlbXB0eSgkX1BPU1RbJ3Byb3Rv
Y29sJ10pICYmIHN0cnRvbG93ZXIoJF9QT1NUWydwcm90b2NvbCddKSE9PSdodHRwLXBvc3Qn
KQoJCQkkdGhpcy0+bm90aWZ5X3Jlc3VsdCgnZmFsc2UnLCAnT25seSBodHRwLXBvc3Qgbm90
aWZpY2F0aW9ucyBhcmUgc3VwcG9ydGVkIGF0IHRoaXMgdGltZS4nKTsKCgkJLy8gQXNzdW1l
IHBvcnQgODAKCQkkcG9ydCA9IDgwOwoJCWlmKGlzc2V0KCRfUE9TVFsncG9ydCddKSAmJiAh
ZW1wdHkoJF9QT1NUWydwb3J0J10pKSB7ICRwb3J0ID0gKGludCkkX1BPU1RbJ3BvcnQnXTsg
fQoKCQkvLyBQYXRoIGlzIHJlcXVpcmVkCgkJaWYoKGlzc2V0KCRfUE9TVFsncGF0aCddKSAm
JiBlbXB0eSgkX1BPU1RbJ3BhdGgnXSkpIHx8ICFpc3NldCgkX1BPU1RbJ3BhdGgnXSkpCgkJ
ewoJCQkkdGhpcy0+bm90aWZ5X3Jlc3VsdCgnZmFsc2UnLCAnTm8gcGF0aCBwcm92aWRlZC4n
KTsKCQl9IGVsc2UgaWYoaXNzZXQoJF9QT1NUWydwYXRoJ10pKSB7CgkJCSRwYXRoID0gJF9Q
T1NUWydwYXRoJ107CgkJfQoKCQkvLyBQcm9jZXNzIGVhY2ggVVJMIHJlcXVlc3Q6IHVybDEs
IHVybDIsIHVybDMgLi4uIHVybE4KCQkkaSA9IDE7CgkJd2hpbGUoaXNzZXQoJF9QT1NUWyd1
cmwnLiRpXSkpCgkJewoJCQkkZmVlZF91cmwgPSAkX1BPU1RbJ3VybCcuJGldOwoJCQlpZigh
cHJlZ19tYXRjaCgnfHVybFxkK3wnLCAkZmVlZF91cmwpKQoJCQl7CgoJCQl9IGVsc2UgaWYo
IWluX2FycmF5KCR0aGlzLT52YXJzWydjdXN0b21fcnNzJ10sICRmZWVkX3VybCkgJiYgJHBy
ZWZzWydyc3NjbG91ZF9mZWVkcyddPT0nY3VzdG9tX29ubHknKSB7CgoJCQl9IGVsc2UgaWYo
IWluX2FycmF5KCR0aGlzLT52YXJzWydjdXN0b21fcnNzJ10sICRmZWVkX3VybCkgJiYgJHBy
ZWZzWydyc3NjbG91ZF9mZWVkcyddPT0nYm90aCcgJiYgc3RycG9zKCRmZWVkX3VybCwgJ3Jz
cycpPT09ZmFsc2UpIHsKCgkJCX0gZWxzZSBpZigkcHJlZnNbJ3Jzc2Nsb3VkX2ZlZWRzJ109
PSdzdGFuZGFyZCcgJiYgc3RycG9zKCRmZWVkX3VybCwgJ3JzcycpPT09ZmFsc2UpIHsgLy8g
T25seSBhbGxvdyByZXF1ZXN0cyBmb3IgdGhlIFJTUyBmZWVkCgoJCQl9IGVsc2UgewoJCQkJ
Ly8gJHJzczJfdXJsID0gZ2V0X2Jsb2dpbmZvKCdyc3MyX3VybCcpOwoJCQkJJG5vdGlmeV91
cmwgPSAkX1NFUlZFUlsnUkVNT1RFX0FERFInXS4nOicuJHBvcnQuJHBhdGg7CgkJCQkkbm90
aWZ5ID0gc2FmZV9yb3coJyonLCAndHhwX3Jzc2Nsb3VkX25vdGlmaWNhdGlvbnMnLCAnZmVl
ZF91cmw9IicuJGZlZWRfdXJsLiciIEFORCBub3RpZnlfdXJsPSInLiRub3RpZnlfdXJsLici
IEFORCBmYWlsdXJlPCInLmFkZHNsYXNoZXMoJHRoaXMtPnZhcnNbJ21heF9mYWlsdXJlcydd
KS4nIiBBTkQgc3RhdHVzPSJhY3RpdmUiJyk7CgoJCQkJaWYoZW1wdHkoJG5vdGlmeSkpIHsK
CQkJCQkvLyBBdHRlbXB0IGEgbm90aWZpY2F0aW9uIHRvIHNlZSBpZiBpdCB3aWxsIHdvcmsK
CQkJCQkkcmVzdWx0ID0gJHRoaXMtPnJlbW90ZV9wb3N0KCRub3RpZnlfdXJsLCBhcnJheSgn
bWV0aG9kJz0+J1BPU1QnLCAndGltZW91dCc9PiR0aGlzLT52YXJzWyd0aW1lb3V0J10sICd1
c2VyLWFnZW50Jz0+JHRoaXMtPnZhcnNbJ3VzZXJfYWdlbnQnXSwgJ3BvcnQnPT4kcG9ydCwg
J2JvZHknPT5hcnJheSgndXJsJyA9PiAkX1BPU1RbJ3VybCcuJGldKSkpOwoJCQkJCWlmKGlz
c2V0KCRyZXN1bHQtPmVycm9yc1snaHR0cF9yZXF1ZXN0X2ZhaWxlZCddWzBdKSkKCQkJCQkJ
JHRoaXMtPm5vdGlmeV9yZXN1bHQoJ2ZhbHNlJywgJ0Vycm9yIHRlc3Rpbmcgbm90aWZpY2F0
aW9uIFVSTCA6ICcuJHJlc3VsdC0+ZXJyb3JzWydodHRwX3JlcXVlc3RfZmFpbGVkJ11bMF0p
OwoJCQkJCWlmKCRyZXN1bHRbJ3Jlc3BvbnNlJ11bJ2NvZGUnXSAhPSAyMDApCgkJCQkJCSR0
aGlzLT5ub3RpZnlfcmVzdWx0KCdmYWxzZScsICdFcnJvciB0ZXN0aW5nIG5vdGlmaWNhdGlv
biBVUkwuJyk7CgoJCQkJCS8vIFBhc3NlZCBhbGwgdGhlIHRlc3RzLCBhZGQgdGhpcyB0byB0
aGUgbGlzdCBvZiBub3RpZmljYXRpb25zIGZvcgoJCQkJCSRzdGF0dXMgPSAnYWN0aXZlJzsK
CQkJCQkkZmFpbHVyZV9jb3VudCA9IDA7CgkJCQkJc2FmZV9pbnNlcnQoJ3R4cF9yc3NjbG91
ZF9ub3RpZmljYXRpb25zJywgJyhmZWVkX3VybCwgbm90aWZ5X3VybCwgcHJvdG9jb2wsIHN0
YXR1cywgZmFpbF9jb3VudCkgVkFMVUVTICgiJy5hZGRzbGFzaGVzKCRmZWVkX3VybCkuJyIs
ICInLmFkZHNsYXNoZXMoJG5vdGlmeV91cmwpLiciLCAiJy5hZGRzbGFzaGVzKCRwcm90b2Nv
bCkuJyIsICInLmFkZHNsYXNoZXMoJHN0YXR1cykuJyIsICInLmFkZHNsYXNoZXMoJGZhaWx1
cmVfY291bnQpLiciKScpOwoJCQkJCSR0aGlzLT5ub3RpZnlfcmVzdWx0KCd0cnVlJywgJ1Jl
Z2lzdHJhdGlvbiBzdWNjZXNzZnVsLicpOwoJCQkJfSBlbHNlIHsKCQkJCQkvLyBhbHJlYWR5
IHJlZ2lzdGVyZWQgZm9yIHBpbmdzCgkJCQkJJHRoaXMtPm5vdGlmeV9yZXN1bHQoJ3RydWUn
LCAnUmVnaXN0cmF0aW9uIGZvciB0aGF0IGZlZWQvbm90aWZ5IFVSTCBhbHJlYWR5IGV4aXN0
cy4nKTsKCQkJCX0KCQkJfQoJCQkkaSsrOwoJCX0KCX0gLy8gZnVuY3Rpb24gaHViX25vdGlm
eQoKCgkvKiBJbnN0YWxsIEdvZXMgSGVyZSAqLwoJZnVuY3Rpb24gaW5zdGFsbCgpIHsKCQlz
YWZlX3F1ZXJ5KCdERUxFVEUgRlJPTSAnLnNhZmVfcGZ4KCd0eHBfcHJlZnMnKS4nIFdIRVJF
IG5hbWUgTElLRSAid2xrX3Jzc2Nsb3VkXyUiJyk7CgkJc2FmZV9pbnNlcnQoJ3R4cF9wcmVm
cycsInByZWZzX2lkID0gJzEnLG5hbWUgPSAnd2xrX3Jzc2Nsb3VkX25vdGlmaWNhdGlvbnNf
aW5zdGFudCcsdmFsID0gJzEnLHR5cGUgPSAnMScsZXZlbnQgPSAnd2xrX3Jzc2Nsb3VkJyxo
dG1sID0gJ3llc25vcmFkaW8nLHBvc2l0aW9uID0gJzEwJyx1c2VyX25hbWUgPSAnJyIpOwoJ
CXNhZmVfaW5zZXJ0KCd0eHBfcHJlZnMnLCJwcmVmc19pZCA9ICcxJyxuYW1lID0gJ3dsa19y
c3NjbG91ZF9tYXhfZmFpbHVyZXMnLHZhbCA9ICcwJyx0eXBlID0gJzEnLGV2ZW50ID0gJ3ds
a19yc3NjbG91ZCcsaHRtbCA9ICd3bGtfcnNzY2xvdWRfZmFpbHVyZXMnLHBvc2l0aW9uID0g
JzIwJyx1c2VyX25hbWUgPSAnJyIpOwoJCXNhZmVfaW5zZXJ0KCd0eHBfcHJlZnMnLCJwcmVm
c19pZCA9ICcxJyxuYW1lID0gJ3dsa19yc3NjbG91ZF90aW1lb3V0Jyx2YWwgPSAnMycsdHlw
ZSA9ICcxJyxldmVudCA9ICd3bGtfcnNzY2xvdWQnLGh0bWwgPSAndGV4dF9pbnB1dCcscG9z
aXRpb24gPSAnMzAnLHVzZXJfbmFtZSA9ICcnIik7CgkJc2FmZV9pbnNlcnQoJ3R4cF9wcmVm
cycsInByZWZzX2lkID0gJzEnLG5hbWUgPSAnd2xrX3Jzc2Nsb3VkX3VzZXJfYWdlbnQnLHZh
bCA9ICdUZXh0cGF0dGVybi9SU1MgQ2xvdWQgMC4yJyx0eXBlID0gJzEnLGV2ZW50ID0gJ3ds
a19yc3NjbG91ZCcsaHRtbCA9ICd0ZXh0X2lucHV0Jyxwb3NpdGlvbiA9ICc0MCcsdXNlcl9u
YW1lID0gJyciKTsKCQlzYWZlX2luc2VydCgndHhwX3ByZWZzJywicHJlZnNfaWQgPSAnMScs
bmFtZSA9ICd3bGtfcnNzY2xvdWRfZmVlZHMnLHZhbCA9ICdzdGFuZGFyZCcsdHlwZSA9ICcx
JyxldmVudCA9ICd3bGtfcnNzY2xvdWQnLGh0bWwgPSAnd2xrX3Jzc2Nsb3VkX2ZlZWRzJyxw
b3NpdGlvbiA9ICc1MCcsdXNlcl9uYW1lID0gJyciKTsKCQlzYWZlX2luc2VydCgndHhwX3By
ZWZzJywicHJlZnNfaWQgPSAnMScsbmFtZSA9ICd3bGtfcnNzY2xvdWRfY3VzdG9tX3VybCcs
dmFsID0gJycsdHlwZSA9ICcxJyxldmVudCA9ICd3bGtfcnNzY2xvdWQnLGh0bWwgPSAndGV4
dF9pbnB1dCcscG9zaXRpb24gPSAnNjAnLHVzZXJfbmFtZSA9ICcnIik7CgkJc2FmZV9xdWVy
eSgiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgYCIuc2FmZV9wZngoJ3R4cF9yc3NjbG91
ZF9ub3RpZmljYXRpb25zJykuImAgKAoJCQlgaWRgIElOVCggMTEgKSBOT1QgTlVMTCBBVVRP
X0lOQ1JFTUVOVCBQUklNQVJZIEtFWSAsCgkJCWBmZWVkX3VybGAgVkFSQ0hBUiggMjU1ICkg
Tk9UIE5VTEwgLAoJCQlgbm90aWZ5X3VybGAgVkFSQ0hBUiggMjU1ICkgTk9UIE5VTEwgLAoJ
CQlgcHJvdG9jb2xgIFZBUkNIQVIoIDIwICkgTk9UIE5VTEwgREVGQVVMVCAgJ2h0dHAtcG9z
dCcsCgkJCWBzdGF0dXNgIFZBUkNIQVIoIDIwICkgTk9UIE5VTEwgREVGQVVMVCAgJ2FjdGl2
ZScsCgkJCWBmYWlsX2NvdW50YCBUSU5ZSU5UKCA0ICkgTk9UIE5VTEwgREVGQVVMVCAgJzAn
LAoJCQlJTkRFWCAoICBgZmVlZF91cmxgICkKCQkpIEVOR0lORSA9IE1ZSVNBTSIpOwoJfQoK
CWZ1bmN0aW9uIGRlbGV0ZSgpIHsKCQlzYWZlX2RlbGV0ZSgndHhwX3ByZWZzJywibmFtZSBM
SUtFICd3bGtfcnNzY2xvdWRfJSciKTsKCQlzYWZlX3F1ZXJ5KCdEUk9QIFRBQkxFIElGIEVY
SVNUUyBgJy5zYWZlX3BmeCgndHhwX3Jzc2Nsb3VkX25vdGlmaWNhdGlvbnMnKS4nYCcpOwoJ
fQp9CiI7czozOiJtZDUiO3M6MzI6IjIyNjAzYTljZDU4NjIwMzRmOTRkYzdjMzc2OWUwMmU0
Ijt9
