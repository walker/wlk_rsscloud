# wlk_rsscloud v0.2
# A down and dirty RSSCloud plugin.
# Walker Hamilton
# http://walkerhamilton.com

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YToxMDp7czo3OiJ2ZXJzaW9uIjtzOjM6IjAuMiI7czo2OiJhdXRob3IiO3M6MTU6IldhbGtl
ciBIYW1pbHRvbiI7czoxMDoiYXV0aG9yX3VyaSI7czoyNToiaHR0cDovL3dhbGtlcmhhbWls
dG9uLmNvbSI7czoxMToiZGVzY3JpcHRpb24iO3M6MzM6IkEgZG93biBhbmQgZGlydHkgUlNT
Q2xvdWQgcGx1Z2luLiI7czo0OiJ0eXBlIjtpOjE7czo1OiJmbGFncyI7aToyO3M6NDoibmFt
ZSI7czoxMjoid2xrX3Jzc2Nsb3VkIjtzOjQ6ImhlbHAiO3M6MzM3OiIJPGgyPkFib3V0PC9o
Mj4KCgk8cD5UaGlzIGlzIGRvd24gYW5kIGRpcnR5IDxzcGFuIGNsYXNzPSJjYXBzIj5SU1ND
PC9zcGFuPmxvdWQgcGx1Z2luLjwvcD4KCgk8aDI+SW5zdGFsbGF0aW9uIGFuZCBVc2U8L2gy
PgoKCTxwPklmIHlvdSYjODIxNzt2ZSBpbnN0YWxsZWQgYW5kIGFjdGl2YXRlZCBpdCwgeW91
JiM4MjE3O3JlIHJlYWR5IHRvIGdvLjwvcD4KCgk8aDI+VGhhbmtzPC9oMj4KCgk8cD5Tb21l
IG9mIHRoZSBjb2RlIGlzIGhlYXZpbHkgYmFzZWQgb24gd29yayBieSBKb3NlcGggU2NvdHQg
KGh0dHA6Ly9qb3NlcGhzY290dC5vcmcvKSBvbiB0aGUgV29yZHByZXNzIHBsdWdpbi48L3A+
IjtzOjQ6ImNvZGUiO3M6MTY1NzU6IgpyZWdpc3Rlcl9jYWxsYmFjaygnd2xrX3Jzc2Nsb3Vk
X2hlYWQnLCAncnNzX2hlYWQnKTsKcmVnaXN0ZXJfY2FsbGJhY2soJ3dsa19yc3NjbG91ZF9u
b3RpZmljYXRpb25fYWN0aXZhdGlvbicsICdwcmV0ZXh0Jyk7CgppZihAdHhwaW50ZXJmYWNl
ID09ICdhZG1pbicpCnsKCXJlZ2lzdGVyX2NhbGxiYWNrKCd3bGtfcnNzY2xvdWRfaW5zdGFs
bCcsICdwbHVnaW5fbGlmZWN5Y2xlLndsa19yc3NjbG91ZCcsICdpbnN0YWxsZWQnKTsKCXJl
Z2lzdGVyX2NhbGxiYWNrKCd3bGtfcnNzY2xvdWRfZGVsZXRlJywgJ3BsdWdpbl9saWZlY3lj
bGUud2xrX3Jzc2Nsb3VkJywgJ2RlbGV0ZWQnKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKCd3bGtf
cnNzY2xvdWRfbGFuZ3VhZ2UnLCAnYWRtaW5fc2lkZScsICdwYWdldG9wJyk7CglyZWdpc3Rl
cl9jYWxsYmFjaygnd2xrX3Jzc2Nsb3VkX3NjaGVkdWxlJywgJ2FydGljbGUnLCAnZWRpdCcp
Owp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfc2NoZWR1bGUoKSB7CgkkcmMgPSBuZXcgV2xr
UnNzQ2xvdWRDbGFzcygpOwoJJHJjLT5zY2hlZHVsZV9wb3N0X25vdGlmaWNhdGlvbnMoKTsK
fQoKZnVuY3Rpb24gd2xrX3Jzc2Nsb3VkX2hlYWQoKSB7CglyZXR1cm4gV2xrUnNzQ2xvdWRD
bGFzczo6aGVhZCgpOwp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfbm90aWZpY2F0aW9uX2Fj
dGl2YXRpb24oKSB7CglpZihpc3NldCgkX0dFVFsncnNzY2xvdWQnXSkgJiYgJF9HRVRbJ3Jz
c2Nsb3VkJ109PSdub3RpZnknKSB7CgkJJHJjID0gbmV3IFdsa1Jzc0Nsb3VkQ2xhc3MoKTsK
CQkkcmMtPmh1Yl9wcm9jZXNzX25vdGlmaWNhdGlvbl9yZXF1ZXN0KCk7CgkJZXhpdCgpOwoJ
fQp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfaW5zdGFsbCgpIHsKCVdsa1Jzc0Nsb3VkQ2xh
c3M6Omluc3RhbGwoKTsKfQoKZnVuY3Rpb24gd2xrX3Jzc2Nsb3VkX2RlbGV0ZSgpIHsKCVds
a1Jzc0Nsb3VkQ2xhc3M6OmRlbGV0ZSgpOwp9CgpmdW5jdGlvbiB3bGtfcnNzY2xvdWRfZmVl
ZHMoKQp7CgkkcmMgPSBuZXcgV2xrUnNzQ2xvdWRDbGFzcygpOwoJcmV0dXJuICRyYy0+ZmVl
ZEREKCk7Cn0KCmZ1bmN0aW9uIHdsa19yc3NjbG91ZF9mYWlsdXJlcygpIHsKCWdsb2JhbCAk
cHJlZnM7CgkkdmFscyA9IGFycmF5KAoJCTUgPT4gNSwKCQkxMCA9PiAxMCwKCQkxNSA9PiAx
NSwKCQkyMCA9PiAyMAoJKTsKCSRuYW1lID0gJ3dsa19yc3NjbG91ZF9tYXhfZmFpbHVyZXMn
OwoJcmV0dXJuIHNlbGVjdElucHV0KCRuYW1lLCAkdmFscywgJHByZWZzWyd3bGtfcnNzY2xv
dWRfbWF4X2ZhaWx1cmVzJ10sICcnLCAnJywgJG5hbWUpOwp9CgpmdW5jdGlvbiB3bGtfcnNz
Y2xvdWRfbGFuZ3VhZ2UoKSB7CgkkcmMgPSBuZXcgV2xrUnNzQ2xvdWRDbGFzcygpOwp9Cgov
LwpjbGFzcyBXbGtSc3NDbG91ZENsYXNzIHsKCXZhciAkdmFycyA9IGFycmF5KAoJCSdub3Rp
ZmljYXRpb25zX2luc3RhbnQnID0+IHRydWUsCgkJJ3VzZXJfYWdlbnQnID0+ICdUZXh0cGF0
dGVybi9SU1NDbG91ZCAwLjInLAoJCSdtYXhfZmFpbHVyZXMnID0+IDUsCgkJJ3RpbWVvdXQn
ID0+IDMKCSk7CgoJZnVuY3Rpb24gX19jb25zdHJ1Y3QoKSB7CgkJZ2xvYmFsICRwcmVmcywg
JHRleHRhcnJheTsKCgkJaWYoJHByZWZzWydsYW5ndWFnZSddPT0nZW4tdXMnKSB7CgkJCSR0
ZXh0YXJyYXlbJ3dsa19yc3NjbG91ZCddID0gJ1JTU0Nsb3VkJzsKCQkJJHRleHRhcnJheVsn
cnNzY2xvdWRfc3RhbmRhcmQnXSA9ICdTdGFuZGFyZCBmZWVkcyc7CgkJCSR0ZXh0YXJyYXlb
J3Jzc2Nsb3VkX2JvdGgnXSA9ICdCb3RoIHN0YW5kYXJkIGZlZWRzICYgdGhlIGN1c3RvbSBm
ZWVkJzsKCQkJJHRleHRhcnJheVsncnNzY2xvdWRfY3VzdG9tX29ubHknXSA9ICdDdXN0b20g
ZmVlZCBvbmx5JzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Nsb3VkX25vdGlmaWNhdGlvbnNf
aW5zdGFudCddID0gJ0luc3RhbnQgbm90aWZpY2F0aW9ucz8gKCJObyIgcmVxdWlyZXMgd2xr
X2Nyb24pJzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Nsb3VkX21heF9mYWlsdXJlcyddID0g
J01heCAjIG9mIGZhaWx1cmVzJzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Nsb3VkX2ZlZWRz
J10gPSAnU2V0IHR5cGUgb2YgZmVlZHMgaW4gdXNlJzsKCQkJJHRleHRhcnJheVsnd2xrX3Jz
c2Nsb3VkX3RpbWVvdXQnXSA9ICdUaW1lb3V0JzsKCQkJJHRleHRhcnJheVsnd2xrX3Jzc2Ns
b3VkX3VzZXJfYWdlbnQnXSA9ICdVc2VyLWFnZW50JzsKCQkJJHRleHRhcnJheVsnd2xrX3Jz
c2Nsb3VkX2N1c3RvbV91cmwnXSA9ICdDdXN0b20gZmVlZCBVUkwnOwoJCX0KCgkJaWYoaXNz
ZXQoJHByZWZzWyd3bGtfcnNzY2xvdWRfbm90aWZpY2F0aW9uc19pbnN0YW50J10pICYmICFl
bXB0eSgkcHJlZnNbJ3dsa19yc3NjbG91ZF9ub3RpZmljYXRpb25zX2luc3RhbnQnXSkpIHsg
JHRoaXMtPnZhcnNbJ25vdGlmaWNhdGlvbnNfaW5zdGFudCddID0gKGJvb2wpJHByZWZzWyd3
bGtfcnNzY2xvdWRfbm90aWZpY2F0aW9uc19pbnN0YW50J107IH0KCQlpZihpc3NldCgkcHJl
ZnNbJ3dsa19yc3NjbG91ZF9tYXhfZmFpbHVyZXMnXSkgJiYgIWVtcHR5KCRwcmVmc1snd2xr
X3Jzc2Nsb3VkX21heF9mYWlsdXJlcyddKSkgeyAkdGhpcy0+dmFyc1snbWF4X2ZhaWx1cmVz
J10gPSAoaW50KSRwcmVmc1snd2xrX3Jzc2Nsb3VkX21heF9mYWlsdXJlcyddOyB9CgkJaWYo
aXNzZXQoJHByZWZzWyd3bGtfcnNzY2xvdWRfdGltZW91dCddKSAmJiAhZW1wdHkoJHByZWZz
Wyd3bGtfcnNzY2xvdWRfdGltZW91dCddKSkgeyAkdGhpcy0+dmFyc1sndGltZW91dCddID0g
KGludCkkcHJlZnNbJ3dsa19yc3NjbG91ZF90aW1lb3V0J107IH0KCQlpZihpc3NldCgkcHJl
ZnNbJ3dsa19yc3NjbG91ZF91c2VyX2FnZW50J10pICYmICFlbXB0eSgkcHJlZnNbJ3dsa19y
c3NjbG91ZF91c2VyX2FnZW50J10pKSB7ICR0aGlzLT52YXJzWyd1c2VyX2FnZW50J10gPSAk
cHJlZnNbJ3dsa19yc3NjbG91ZF91c2VyX2FnZW50J107IH0KCQlpZihpc3NldCgkcHJlZnNb
J3dsa19yc3NjbG91ZF9jdXN0b21fdXJsJ10pICYmICFlbXB0eSgkcHJlZnNbJ3dsa19yc3Nj
bG91ZF9jdXN0b21fdXJsJ10pKSB7ICR0aGlzLT52YXJzWydjdXN0b21fdXJsJ10gPSAkcHJl
ZnNbJ3dsa19yc3NjbG91ZF9jdXN0b21fdXJsJ107IH0KCX0KCglmdW5jdGlvbiBXbGtSc3ND
bG91ZENsYXNzKCkgewoJCSR0aGlzLT5fX2NvbnN0cnVjdCgpOwoJfQoKCWZ1bmN0aW9uIGZl
ZWRERCgpIHsKCQlnbG9iYWwgJHByZWZzOwoJCSR2YWxzID0gYXJyYXkoCgkJCSdzdGFuZGFy
ZCcgPT4gZ1R4dCgncnNzY2xvdWRfc3RhbmRhcmQnKSwKCQkJJ2JvdGgnID0+IGdUeHQoJ3Jz
c2Nsb3VkX2JvdGgnKSwKCQkJJ2N1c3RvbV9vbmx5JyA9PiBnVHh0KCdyc3NjbG91ZF9jdXN0
b21fb25seScpLAoJCSk7CgkJJG5hbWUgPSAnd2xrX3Jzc2Nsb3VkX2ZlZWRzJzsKCQlyZXR1
cm4gc2VsZWN0SW5wdXQoJG5hbWUsICR2YWxzLCAkcHJlZnNbJ3dsa19yc3NjbG91ZF9mZWVk
cyddLCAnJywgJycsICRuYW1lKTsKCX0KCgkvKiBOZWVkZWQgSFRUUCBTdHVmZiAtIFNob3Vs
ZCByZWFsbHkgY3JlYXRlIGEgIzIgbGlicmFyeSBwbHVnaW4gZm9yIHRoaXMqLwoJZnVuY3Rp
b24gcmVtb3RlX3Bvc3QoJHVybCwgJGFyZ3MgPSBhcnJheSgpKSB7CgkJJGRlZmF1bHRzID0g
YXJyYXkoCgkJCSdtZXRob2QnID0+ICdwb3N0JywKCQkJJ2JvZHknID0+IGFycmF5KCksCgkJ
CSdvcHRpb25zJyA9PiBhcnJheSgncGF0aCc9PicvJywgJ3BvcnQnID0+IDgwKQoJCSk7CgoJ
CWlmKGlzc2V0KCRhcmdzWydvcHRpb25zJ10pKSB7CgkJCSRmaW5hbF9vcHRpb25zID0gYXJy
YXlfbWVyZ2UoJGRlZmF1bHRzWydvcHRpb25zJ10sICRhcmdzWydvcHRpb25zJ10pOwoJCX0g
ZWxzZSB7CgkJCSRmaW5hbF9vcHRpb25zID0gJGRlZmF1bHRzWydvcHRpb25zJ107CgkJfQoJ
CSRmaW5hbF9hcmdzID0gYXJyYXlfbWVyZ2UoJGRlZmF1bHRzLCAkYXJncyk7CgkJJGZpbmFs
X2FyZ3NbJ29wdGlvbnMnXSA9ICRmaW5hbF9vcHRpb25zOwoJCSRhcmdzID0gJGZpbmFsX2Fy
Z3M7CgoJCSRyZXN1bHQgPSBhcnJheSgpOwoKCQkvLyBUT0RPOiBTaG91bGQgcmVhbGx5IG1h
a2UgZm9wZW4sIGZzb2Nrb3BlbiwgJiBleHRodHRwIHdvcmsuLi4KCQlpZihmdW5jdGlvbl9l
eGlzdHMoJ2N1cmxfaW5pdCcpICYmIGZ1bmN0aW9uX2V4aXN0cygnY3VybF9leGVjJykpIHsK
CQkJJGN1cmwgPSBjdXJsX2luaXQoc3RyX3JlcGxhY2UoJy8vJywgJy8nLCAkdXJsLiRhcmdz
WydvcHRpb25zJ11bJ3BhdGgnXSkpOwoJCQljdXJsX3NldG9wdCgkY3VybCwgQ1VSTE9QVF9V
U0VSQUdFTlQsICR0aGlzLT52YXJzWyd1c2VyX2FnZW50J10pOwoJCQljdXJsX3NldG9wdCgk
Y3VybCwgQ1VSTE9QVF9QT1NULCAxKTsKCQkJY3VybF9zZXRvcHQoJGN1cmwsIENVUkxPUFRf
UE9TVEZJRUxEUywgJGZpbmFsX2FyZ3NbJ2JvZHknXSk7CgkJCWN1cmxfc2V0b3B0KCRjdXJs
LCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCAxKTsKCQkJY3VybF9zZXRvcHQoJGN1cmwsIENV
UkxPUFRfVElNRU9VVCwgJHRoaXMtPnZhcnNbJ3RpbWVvdXQnXSk7CgkJCSRyZXN1bHRbJ3Jl
c3BvbnNlJ10gPSBjdXJsX2V4ZWMoJGN1cmwpOwoJCQkkcmVzdWx0Wydjb2RlJ10gPSBjdXJs
X2dldGluZm8oJGN1cmwsIENVUkxJTkZPX0hUVFBfQ09ERSk7CgkJCWN1cmxfY2xvc2UoJGN1
cmwpOwoJCX0gLy8gZWxzZSBpZihmdW5jdGlvbl9leGlzdHMoJ2Zzb2Nrb3BlbicpKSB7CgkJ
Ly8gCXJldHVybiAkdGhpcy0+X2Zzb2NrX3Bvc3QoJ2h0dHAnLCAkZmluYWxfYXJnc1sndXJs
J10sICRmaW5hbF9hcmdzWydvcHRpb25zJ11bJ3BvcnQnXSwgJGZpbmFsX2FyZ3NbJ29wdGlv
bnMnXVsncGF0aCddLCAkZmluYWxfYXJnc1snYm9keSddKTsKCQkvLyB9IGVsc2UgaWYoZnVu
Y3Rpb25fZXhpc3RzKCdodHRwX3JlcXVlc3QnKSkgewoJCS8vIAlyZXR1cm4gaHR0cF9yZXF1
ZXN0KCRmaW5hbF9hcmdzWydtZXRob2QnfSwgJGZpbmFsX2FyZ3NbJ3VybCddLCAkZmluYWxf
YXJnc1snYm9keSddLCAkZmluYWxfYXJnc1snb3B0aW9ucyddKTsKCQkvLyB9Cgl9CgoJLy8g
ZnVuY3Rpb24gX2Zzb2NrX3Bvc3QoJHR5cGUsJGhvc3QsJHBvcnQ9JzgwJywkcGF0aD0nLycs
JGRhdGE9JycpIHsKCS8vIAkkX2VyciA9ICdsaWIgc29ja2V0czo6Jy5fX0ZVTkNUSU9OX18u
JygpOiAnOwoJLy8gCXN3aXRjaCgkdHlwZSkgeyBjYXNlICdodHRwJzogJHR5cGUgPSAnJzsg
Y2FzZSAnc3NsJzogY29udGludWU7IGRlZmF1bHQ6IGRpZSgkX2Vyci4nYmFkICR0eXBlJyk7
IH0gaWYoIWN0eXBlX2RpZ2l0KCRwb3J0KSkgZGllKCRfZXJyLidiYWQgcG9ydCcpOwoJLy8g
CWlmKCFlbXB0eSgkZGF0YSkpIGZvcmVhY2goJGRhdGEgQVMgJGsgPT4gJHYpICRzdHIgLj0g
dXJsZW5jb2RlKCRrKS4nPScudXJsZW5jb2RlKCR2KS4nJic7ICRzdHIgPSBzdWJzdHIoJHN0
ciwwLC0xKTsKCS8vCgkvLyAJJGZwID0gZnNvY2tvcGVuKCRob3N0LCRwb3J0LCRlcnJubywk
ZXJyc3RyLCR0aW1lb3V0PTMwKTsKCS8vIAlpZighJGZwKSBkaWUoJF9lcnIuJGVycnN0ci4k
ZXJybm8pOyBlbHNlIHsKCS8vIAkJZndyaXRlKCRmcCwgIlBPU1QgJHBhdGggSFRUUC8xLjFc
clxuIik7CgkvLyAJCWZ3cml0ZSgkZnAsICJIb3N0OiAkaG9zdFxyXG4iKTsKCS8vIAkJZndy
aXRlKCRmcCwgIlVzZXItQWdlbnQ6ICIuJHRoaXMtPnZhcnNbJ3VzZXJfYWdlbnQnXS4iXHJc
biIpOwoJLy8gCQlmd3JpdGUoJGZwLCAiQ29udGVudC10eXBlOiBhcHBsaWNhdGlvbi94LXd3
dy1mb3JtLXVybGVuY29kZWRcclxuIik7CgkvLyAJCWZ3cml0ZSgkZnAsICJDb250ZW50LWxl
bmd0aDogIi5zdHJsZW4oJHN0cikuIlxyXG4iKTsKCS8vIAkJZndyaXRlKCRmcCwgIkNvbm5l
Y3Rpb246IGNsb3NlXHJcblxyXG4iKTsKCS8vIAkJZndyaXRlKCRmcCwgJHN0ci4iXHJcblxy
XG4iKTsKCS8vCgkvLyAJCXdoaWxlKCFmZW9mKCRmcCkpICRkIC49IGZnZXRzKCRmcCw0MDk2
KTsKCS8vIAkJZmNsb3NlKCRmcCk7CgkvLyAJfQoJLy8gCXJldHVybiAkZDsKCS8vIH0KCglm
dW5jdGlvbiBoZWFkKCkgewoJCSRjbG91ZCA9IHBhcnNlX3VybChodS4nP3Jzc2Nsb3VkPW5v
dGlmeScpOwoJCWlmKGlzc2V0KCRjbG91ZFsncG9ydCddKSkgewoJCQkkY2xvdWRbJ3BvcnQn
XSA9IChpbnQpICRjbG91ZFsncG9ydCddOwoJCQlpZihlbXB0eSggJGNsb3VkWydwb3J0J10p
KSB7ICRjbG91ZFsncG9ydCddID0gODA7IH0KCQl9IGVsc2UgewoJCQkkY2xvdWRbJ3BvcnQn
XSA9IDgwOwoJCX0KCQkkY2xvdWRbJ3BhdGgnXSAuPSAiP3skY2xvdWRbJ3F1ZXJ5J119IjsK
CQkkY2xvdWRbJ2hvc3QnXSA9IHN0cnRvbG93ZXIoICRjbG91ZFsnaG9zdCddICk7CgoJCXJl
dHVybiAiPGNsb3VkIGRvbWFpbj0neyRjbG91ZFsnaG9zdCddfScgcG9ydD0neyRjbG91ZFsn
cG9ydCddfScgcGF0aD0neyRjbG91ZFsncGF0aCddfScgcmVnaXN0ZXJQcm9jZWR1cmU9Jycg
cHJvdG9jb2w9J2h0dHAtcG9zdCcgLz4iLiJcbiI7Cgl9CgoJZnVuY3Rpb24gbm90aWZ5X3Jl
c3VsdCgkc3VjY2VzcywgJG1zZykgewoJCWhlYWRlcignQ29udGVudC1UeXBlOiB0ZXh0L3ht
bCcpOwoJCWVjaG8gIjw/eG1sIHZlcnNpb249JzEuMCciLiI/Ii4iPiIuIlxuIjsKCQllY2hv
ICI8bm90aWZ5UmVzdWx0IHN1Y2Nlc3M9J3skc3VjY2Vzc30nIG1zZz0neyRtc2d9JyAvPlxu
IjsKCQlleGl0OwoJfQoKCWZ1bmN0aW9uIHNjaGVkdWxlX3Bvc3Rfbm90aWZpY2F0aW9ucygp
IHsKCQlpZigkdGhpcy0+dmFyc1snbm90aWZpY2F0aW9uc19pbnN0YW50J10gJiYgZnVuY3Rp
b25fZXhpc3RzKCd3bGtfY3Jvbl9zaW5nbGVfZXZlbnQnKSkgewoJCQkvLyBUT0RPOiBjcmVh
dGUgd2xrX2Nyb24gUGx1Z2luCgkJCXdsa19jcm9uX3NpbmdsZV9ldmVudCh0aW1lKCksICdz
ZW5kX3Bvc3Rfbm90aWZpY2F0aW9uc19hY3Rpb24nKTsKCQl9IGVsc2UgewoJCQkkdGhpcy0+
c2VuZF9wb3N0X25vdGlmaWNhdGlvbnMoKTsKCQl9Cgl9CgoJZnVuY3Rpb24gc2VuZF9wb3N0
X25vdGlmaWNhdGlvbnMoKSB7CgkJZ2xvYmFsICRwcmVmczsKCQkkc2VuZF91ZCA9IGZhbHNl
OwoJCWlmKCFlbXB0eSgkX1BPU1QpICYmIGlzc2V0KCRfUE9TVFsnSUQnXSkpIHsKCQkJaWYo
aXNfbnVtZXJpYygkX1BPU1RbJ0lEJ10pKSB7CgkJCQkkYSA9IHNhZmVfcm93KCdTdGF0dXMn
LCAndGV4dHBhdHRlcm4nLCAnSUQ9Jy5pbnR2YWwoJGlkKSk7CgkJCQlpZiAoJGEpIHsKCQkJ
CQlpZigkdUV4cGlyZXMgYW5kIHRpbWUoKSA+ICR1RXhwaXJlcyBhbmQgISRwcmVmc1sncHVi
bGlzaF9leHBpcmVkX2FydGljbGVzJ10pIHsKCQkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJ
CQkJcmV0dXJuOwoJCQkJCX0KCQkJCQlpZigoJGFbJ1N0YXR1cyddIT00IHx8ICRhWydTdGF0
dXMnXSE9NSkgJiYgKCRfUE9TVFsnU3RhdHVzJ109PTQgfHwgJF9QT1NUWydTdGF0dXMnXT09
NSkpIHsKCQkJCQkJLy8gc3RhdHVzIGNoYW5nZWQgdG8gcHVibGlzaGVkCgkJCQkJCSRzZW5k
X3VkID0gdHJ1ZTsKCQkJCQl9IGVsc2UgewoJCQkJCQkvLyBzdGF0dXMgZGlkbid0IGNoYW5n
ZSB0byBwdWJsaXNoZWQKCQkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJCQkJcmV0dXJuOwoJ
CQkJCX0KCQkJCX0gZWxzZSB7CgkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJCX0KCQkJfSBl
bHNlIGlmKCghaXNfbnVtZXJpYygkX1BPU1RbJ0lEJ10pIHx8IGVtcHR5KCRfUE9TVFsnSUQn
XSkpICYmICgkX1BPU1RbJ1N0YXR1cyddPT00IHx8ICRfUE9TVFsnU3RhdHVzJ109PTUpKSB7
CgkJCQlpZighJHRoaXMtPmV4cGlyZWQoJF9QT1NUKSAmJiAkdGhpcy0+cHVibGlzaGVkKCRf
UE9TVCkpIHsKCQkJCQkkc2VuZF91ZCA9IHRydWU7CgkJCQl9IGVsc2UgaWYoISR0aGlzLT5l
eHBpcmVkKCRfUE9TVCkgJiYgISR0aGlzLT5wdWJsaXNoZWQoJF9QT1NUKSkgewoJCQkJCS8v
IFRPRE86IFNldCBjcm9uCgkJCQkJJHNlbmRfdWQgPSBmYWxzZTsKCQkJCQlyZXR1cm47CgkJ
CQl9CgkJCX0gZWxzZSB7CgkJCQkvLyBlcnJvciEKCQkJCSRzZW5kX3VkID0gZmFsc2U7CgkJ
CQlyZXR1cm47CgkJCX0KCQl9CgoJCWlmKCRzZW5kX3VkKSB7CgkJCSR1cmxzID0gYXJyYXko
KTsKCgkJCWlmKCRwcmVmc1snd2xrX3Jzc2Nsb3VkX2ZlZWRzJ109PSdjdXN0b21fb25seScg
fHwgJHByZWZzWyd3bGtfcnNzY2xvdWRfZmVlZHMnXT09J2JvdGgnKSB7CgkJCQkkdXJsc1td
ID0gJHByZWZzWydjdXN0b21fdXJsJ107CgkJCX0KCgkJCWlmKCRwcmVmc1snd2xrX3Jzc2Ns
b3VkX2ZlZWRzJ109PSdib3RoJyB8fCAkcHJlZnNbJ3dsa19yc3NjbG91ZF9mZWVkcyddPT0n
c3RhbmRhcmQnKSB7CgkJCQkvLyBnZXQgdGhlIHNlY3Rpb24sIGNhdGVnb3J5LCAmICJBbGwi
CgkJCQkkZnJzID0gc2FmZV9jb2x1bW4oIm5hbWUiLCAidHhwX3NlY3Rpb24iLCAiaW5fcnNz
ICE9ICcxJyIpOwoJCQkJaWYoaXNzZXQoJF9QT1NUWydTZWN0aW9uJ10pICYmIGluX2FycmF5
KCRfUE9TVFsnU2VjdGlvbiddLCAkZnJzKSkgewoJCQkJCS8vIGNhbid0IHNlbmQgdGhhdCBz
ZWN0aW9uCgkJCQl9IGVsc2UgewoJCQkJCS8vIGNvbnN0cnVjdCB0aGUgZmVlZCBVUkxzCgkJ
CQkJLy8gYWRkIHRvIHRoZSBVUkxzIGFycmF5CgkJCQkJJHVybHNbXSA9IGh1Lidyc3MvJzsK
CgkJCQkJaWYoaXNzZXQoJF9QT1NUWydTZWN0aW9uJ10pICYmICFlbXB0eSgkX1BPU1RbJ1Nl
Y3Rpb24nXSkpIHsKCQkJCQkJJHVybHNbXSA9IGh1Lidyc3MvP3NlY3Rpb249Jy4kX1BPU1Rb
J1NlY3Rpb24nXTsKCQkJCQl9CgoJCQkJCWlmKGlzc2V0KCRfUE9TVFsnQ2F0ZWdvcnkxJ10p
ICYmICFlbXB0eSgkX1BPU1RbJ0NhdGVnb3J5MSddKSkgewoJCQkJCQkkdXJsc1tdID0gaHUu
J3Jzcy8/Y2F0ZWdvcnk9Jy4kX1BPU1RbJ0NhdGVnb3J5MSddOwoJCQkJCQlpZihpc3NldCgk
X1BPU1RbJ1NlY3Rpb24nXSkgJiYgIWVtcHR5KCRfUE9TVFsnU2VjdGlvbiddKSkgewoJCQkJ
CQkJJHVybHNbXSA9IGh1Lidyc3MvP3NlY3Rpb249Jy4kX1BPU1RbJ1NlY3Rpb24nXS4nJmNh
dGVnb3J5PScuJF9QT1NUWydDYXRlZ29yeTEnXTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJaWYo
aXNzZXQoJF9QT1NUWydDYXRlZ29yeTInXSkgJiYgIWVtcHR5KCRfUE9TVFsnQ2F0ZWdvcnky
J10pKSB7CgkJCQkJCSR1cmxzW10gPSBodS4ncnNzLz9jYXRlZ29yeT0nLiRfUE9TVFsnQ2F0
ZWdvcnkyJ107CgkJCQkJCWlmKGlzc2V0KCRfUE9TVFsnU2VjdGlvbiddKSAmJiAhZW1wdHko
JF9QT1NUWydTZWN0aW9uJ10pKSB7CgkJCQkJCQkkdXJsc1tdID0gaHUuJ3Jzcy8/c2VjdGlv
bj0nLiRfUE9TVFsnU2VjdGlvbiddLicmY2F0ZWdvcnk9Jy4kX1BPU1RbJ0NhdGVnb3J5Midd
OwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9CgoJCQlpZighZW1wdHkoJHVybHMpKSB7CgkJ
CQkkZmVlZF9jb25kaXRpb25fYXJyID0gYXJyYXkoKTsKCQkJCWZvcmVhY2goJHVybHMgYXMg
JHVybCkgewoJCQkJCSRmZWVkX2NvbmRpdGlvbl9hcnJbXSA9ICdmZWVkX3VybD0iJy5hZGRz
bGFzaGVzKCR1cmwpLiciJzsKCQkJCX0KCQkJCSRmZWVkX2NvbmRpdGlvbnMgPSBpbXBsb2Rl
KCcgT1IgJywgJGZlZWRfY29uZGl0aW9uX2Fycik7CgoJCQkJJG5vdGlmeSA9IHNhZmVfcm93
cygnKicsICd0eHBfcnNzY2xvdWRfbm90aWZpY2F0aW9ucycsICcoJy4kZmVlZF9jb25kaXRp
b25zLicpIEFORCBzdGF0dXM9ImFjdGl2ZSInKTsKCgkJCQlmb3JlYWNoKCRub3RpZnkgYXMg
JG4pCgkJCQl7CgkJCQkJaWYoJG5bJ3N0YXR1cyddID09ICdhY3RpdmUnKQoJCQkJCXsKCQkJ
CQkJaWYgKCRuWydwcm90b2NvbCddID09ICdodHRwLXBvc3QnKQoJCQkJCQl7CgkJCQkJCQkk
dXJsID0gcGFyc2VfdXJsKCRuWydub3RpZnlfdXJsJ10pOwoJCQkJCQkJJHBvcnQgPSA4MDsK
CQkJCQkJCWlmKCFlbXB0eSgkdXJsWydwb3J0J10pKSB7ICRwb3J0ID0gJHVybFsncG9ydCdd
OyB9CgoJCQkJCQkJJHJlc3VsdCA9ICR0aGlzLT5yZW1vdGVfcG9zdCgkblsnbm90aWZ5X3Vy
bCddLCBhcnJheSgnbWV0aG9kJyA9PiAnUE9TVCcsICdwb3J0JyA9PiAkcG9ydCwgJ2JvZHkn
ID0+IGFycmF5KCd1cmwnID0+ICRuWydmZWVkX3VybCddKSkpOwoKCQkJCQkJCSRuZWVkX3Vw
ZGF0ZSA9IGZhbHNlOwoJCQkJCQkJaWYoJHJlc3VsdFsnY29kZSddIT0yMDApCgkJCQkJCQl7
CgkJCQkJCQkJJG5bJ2ZhaWxfY291bnQnXSA9ICRuWydmYWlsX2NvdW50J10rMTsKCQkJCQkJ
CQlzYWZlX3VwZGF0ZSgndHhwX3Jzc2Nsb3VkX25vdGlmaWNhdGlvbnMnLCAnZmFpbF9jb3Vu
dD0iJy4kblsnZmFpbF9jb3VudCddLiciJywgJ2lkPSInLiRuWydpZCddLiciJyk7CgkJCQkJ
CQl9CgoJCQkJCQkJaWYoJG5bJ2ZhaWxfY291bnQnXSA+ICR0aGlzLT52YXJzWydtYXhfZmFp
bHVyZXMnXSkgewoJCQkJCQkJCXNhZmVfdXBkYXRlKCd0eHBfcnNzY2xvdWRfbm90aWZpY2F0
aW9ucycsICdzdGF0dXM9InN1c3BlbmRlZCInLCAnaWQ9IicuJG5bJ2lkJ10uJyInKTsKCQkJ
CQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0gLy8gZm9yZWFjaAoJCQl9CgkJfQoJfQoKCWZ1
bmN0aW9uIHB1Ymxpc2hlZCgkcG9zdCkgewoJCSR3aGVuX3RzID0gdGltZSgpOwoKCQlpZihp
c3NldCgkcG9zdFsncmVzZXRfdGltZSddKSkgewoJCQlyZXR1cm4gdHJ1ZTsKCQl9IGVsc2Ug
ewoJCQlpZiAoIWlzX251bWVyaWMoJHBvc3RbJ3llYXInXSkgfHwgIWlzX251bWVyaWMoJHBv
c3RbJ21vbnRoJ10pIHx8ICFpc19udW1lcmljKCRwb3N0WydkYXknXSkgfHwgIWlzX251bWVy
aWMoJHBvc3RbJ2hvdXInXSkgIHx8ICFpc19udW1lcmljKCRwb3N0WydtaW51dGUnXSkgfHwg
IWlzX251bWVyaWMoJHBvc3RbJ3NlY29uZCddKSApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJ
fQoJCQkkdHMgPSBzdHJ0b3RpbWUoJHBvc3RbJ3llYXInXS4nLScuJHBvc3RbJ21vbnRoJ10u
Jy0nLiRwb3N0WydkYXknXS4nICcuJHBvc3RbJ2hvdXInXS4nOicuJHBvc3RbJ21pbnV0ZSdd
Lic6Jy4kcG9zdFsnc2Vjb25kJ10pOwoJCQlpZiAoJHRzID09PSBmYWxzZSB8fCAkdHMgPT09
IC0xKSB7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCgkJCSR3aGVuID0gJHdoZW5fdHMgPSAk
dHMgLSB0el9vZmZzZXQoJHRzKTsKCgkJCWlmKCR3aGVuPD10aW1lKCkpCgkJCQlyZXR1cm4g
dHJ1ZTsKCQkJZWxzZQoJCQkJcmV0dXJuIGZhbHNlOwoJCX0KCX0KCglmdW5jdGlvbiBleHBp
cmVkKCRwb3N0KSB7CgkJaWYoaXNzZXQoJHBvc3RbJ2V4cF95ZWFyJ10pICYmICFlbXB0eSgk
cG9zdFsnZXhwX3llYXInXSkpIHsKCQkJaWYoZW1wdHkoJHBvc3RbJ2V4cF9tb250aCddKSkg
JHBvc3RbJ2V4cF9tb250aCddPTE7CgkJCWlmKGVtcHR5KCRwb3N0WydleHBfZGF5J10pKSAk
cG9zdFsnZXhwX2RheSddPTE7CgkJCWlmKGVtcHR5KCRwb3N0WydleHBfaG91ciddKSkgJHBv
c3RbJ2V4cF9ob3VyJ109MDsKCQkJaWYoZW1wdHkoJHBvc3RbJ2V4cF9taW51dGUnXSkpICRw
b3N0WydleHBfbWludXRlJ109MDsKCQkJaWYoZW1wdHkoJHBvc3RbJ2V4cF9zZWNvbmQnXSkp
ICRwb3N0WydleHBfc2Vjb25kJ109MDsKCgkJCSR0cyA9IHN0cnRvdGltZSgkcG9zdFsnZXhw
X3llYXInXS4nLScuJHBvc3RbJ2V4cF9tb250aCddLictJy4kcG9zdFsnZXhwX2RheSddLicg
Jy4kcG9zdFsnZXhwX2hvdXInXS4nOicuJHBvc3RbJ2V4cF9taW51dGUnXS4nOicuJHBvc3Rb
J2V4cF9zZWNvbmQnXSk7CgkJCSRleHBpcmVzID0gJHRzIC0gdHpfb2Zmc2V0KCR0cyk7CgoJ
CQlpZigkZXhwaXJlczw9dGltZSgpKQoJCQkJcmV0dXJuIHRydWU7CgkJCWVsc2UKCQkJCXJl
dHVybiBmYWxzZTsKCQl9IGVsc2UgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJfQoKCWZ1bmN0
aW9uIGh1Yl9wcm9jZXNzX25vdGlmaWNhdGlvbl9yZXF1ZXN0KCkgewoJCWdsb2JhbCAkcHJl
ZnM7CgoJCS8vIE11c3QgcHJvdmlkZSBhdCBsZWFzdCBvbmUgVVJMIHRvIGdldCBub3RpZmlj
YXRpb25zIGFib3V0CgkJaWYoaXNzZXQoJF9QT1NUWyd1cmwxJ10pICYmIGVtcHR5KCRfUE9T
VFsndXJsMSddKSkKCQkJJHRoaXMtPm5vdGlmeV9yZXN1bHQoJ2ZhbHNlJywgJ05vIGZlZWQg
Zm9yIHVybDEuJyk7CgoJCS8vIE9ubHkgc3VwcG9ydCBodHRwLXBvc3QKCQkkcHJvdG9jb2wg
PSAnaHR0cC1wb3N0JzsKCQlpZihpc3NldCgkX1BPU1RbJ3Byb3RvY29sJ10pICYmICFlbXB0
eSgkX1BPU1RbJ3Byb3RvY29sJ10pICYmIHN0cnRvbG93ZXIoJF9QT1NUWydwcm90b2NvbCdd
KSE9PSdodHRwLXBvc3QnKQoJCQkkdGhpcy0+bm90aWZ5X3Jlc3VsdCgnZmFsc2UnLCAnT25s
eSBodHRwLXBvc3Qgbm90aWZpY2F0aW9ucyBhcmUgc3VwcG9ydGVkIGF0IHRoaXMgdGltZS4n
KTsKCgkJLy8gQXNzdW1lIHBvcnQgODAKCQkkcG9ydCA9IDgwOwoJCWlmKGlzc2V0KCRfUE9T
VFsncG9ydCddKSAmJiAhZW1wdHkoJF9QT1NUWydwb3J0J10pKSB7ICRwb3J0ID0gKGludCkk
X1BPU1RbJ3BvcnQnXTsgfQoKCQkvLyBQYXRoIGlzIHJlcXVpcmVkCgkJaWYoKGlzc2V0KCRf
UE9TVFsncGF0aCddKSAmJiBlbXB0eSgkX1BPU1RbJ3BhdGgnXSkpIHx8ICFpc3NldCgkX1BP
U1RbJ3BhdGgnXSkpCgkJewoJCQkkdGhpcy0+bm90aWZ5X3Jlc3VsdCgnZmFsc2UnLCAnTm8g
cGF0aCBwcm92aWRlZC4nKTsKCQl9IGVsc2UgaWYoaXNzZXQoJF9QT1NUWydwYXRoJ10pKSB7
CgkJCSRwYXRoID0gJF9QT1NUWydwYXRoJ107CgkJfQoKCQkvLyBQcm9jZXNzIGVhY2ggVVJM
IHJlcXVlc3Q6IHVybDEsIHVybDIsIHVybDMgLi4uIHVybE4KCQkkaSA9IDE7CgkJd2hpbGUo
aXNzZXQoJF9QT1NUWyd1cmwnLiRpXSkpCgkJewoJCQkkZmVlZF91cmwgPSAkX1BPU1RbJ3Vy
bCcuJGldOwoJCQlpZighcHJlZ19tYXRjaCgnfHVybFxkK3wnLCAkZmVlZF91cmwpKQoJCQl7
CgoJCQl9IGVsc2UgaWYoIWluX2FycmF5KCR0aGlzLT52YXJzWydjdXN0b21fcnNzJ10sICRm
ZWVkX3VybCkgJiYgJHByZWZzWydyc3NjbG91ZF9mZWVkcyddPT0nY3VzdG9tX29ubHknKSB7
CgoJCQl9IGVsc2UgaWYoIWluX2FycmF5KCR0aGlzLT52YXJzWydjdXN0b21fcnNzJ10sICRm
ZWVkX3VybCkgJiYgJHByZWZzWydyc3NjbG91ZF9mZWVkcyddPT0nYm90aCcgJiYgc3RycG9z
KCRmZWVkX3VybCwgJ3JzcycpPT09ZmFsc2UpIHsKCgkJCX0gZWxzZSBpZigkcHJlZnNbJ3Jz
c2Nsb3VkX2ZlZWRzJ109PSdzdGFuZGFyZCcgJiYgc3RycG9zKCRmZWVkX3VybCwgJ3Jzcycp
PT09ZmFsc2UpIHsgLy8gT25seSBhbGxvdyByZXF1ZXN0cyBmb3IgdGhlIFJTUyBmZWVkCgoJ
CQl9IGVsc2UgewoJCQkJLy8gJHJzczJfdXJsID0gZ2V0X2Jsb2dpbmZvKCdyc3MyX3VybCcp
OwoJCQkJJG5vdGlmeV91cmwgPSAkX1NFUlZFUlsnUkVNT1RFX0FERFInXS4nOicuJHBvcnQu
JHBhdGg7CgkJCQkkbm90aWZ5ID0gc2FmZV9yb3coJyonLCAndHhwX3Jzc2Nsb3VkX25vdGlm
aWNhdGlvbnMnLCAnZmVlZF91cmw9IicuJGZlZWRfdXJsLiciIEFORCBub3RpZnlfdXJsPSIn
LiRub3RpZnlfdXJsLiciIEFORCBmYWlsdXJlPCInLmFkZHNsYXNoZXMoJHRoaXMtPnZhcnNb
J21heF9mYWlsdXJlcyddKS4nIiBBTkQgc3RhdHVzPSJhY3RpdmUiJyk7CgoJCQkJaWYoZW1w
dHkoJG5vdGlmeSkpIHsKCQkJCQkvLyBBdHRlbXB0IGEgbm90aWZpY2F0aW9uIHRvIHNlZSBp
ZiBpdCB3aWxsIHdvcmsKCQkJCQkkcmVzdWx0ID0gJHRoaXMtPnJlbW90ZV9wb3N0KCRub3Rp
ZnlfdXJsLCBhcnJheSgnbWV0aG9kJz0+J1BPU1QnLCAndGltZW91dCc9PiR0aGlzLT52YXJz
Wyd0aW1lb3V0J10sICd1c2VyLWFnZW50Jz0+JHRoaXMtPnZhcnNbJ3VzZXJfYWdlbnQnXSwg
J3BvcnQnPT4kcG9ydCwgJ2JvZHknPT5hcnJheSgndXJsJyA9PiAkX1BPU1RbJ3VybCcuJGld
KSkpOwoJCQkJCWlmKGlzc2V0KCRyZXN1bHQtPmVycm9yc1snaHR0cF9yZXF1ZXN0X2ZhaWxl
ZCddWzBdKSkKCQkJCQkJJHRoaXMtPm5vdGlmeV9yZXN1bHQoJ2ZhbHNlJywgJ0Vycm9yIHRl
c3Rpbmcgbm90aWZpY2F0aW9uIFVSTCA6ICcuJHJlc3VsdC0+ZXJyb3JzWydodHRwX3JlcXVl
c3RfZmFpbGVkJ11bMF0pOwoJCQkJCWlmKCRyZXN1bHRbJ3Jlc3BvbnNlJ11bJ2NvZGUnXSAh
PSAyMDApCgkJCQkJCSR0aGlzLT5ub3RpZnlfcmVzdWx0KCdmYWxzZScsICdFcnJvciB0ZXN0
aW5nIG5vdGlmaWNhdGlvbiBVUkwuJyk7CgoJCQkJCS8vIFBhc3NlZCBhbGwgdGhlIHRlc3Rz
LCBhZGQgdGhpcyB0byB0aGUgbGlzdCBvZiBub3RpZmljYXRpb25zIGZvcgoJCQkJCSRzdGF0
dXMgPSAnYWN0aXZlJzsKCQkJCQkkZmFpbHVyZV9jb3VudCA9IDA7CgkJCQkJc2FmZV9pbnNl
cnQoJ3R4cF9yc3NjbG91ZF9ub3RpZmljYXRpb25zJywgJyhmZWVkX3VybCwgbm90aWZ5X3Vy
bCwgcHJvdG9jb2wsIHN0YXR1cywgZmFpbF9jb3VudCkgVkFMVUVTICgiJy5hZGRzbGFzaGVz
KCRmZWVkX3VybCkuJyIsICInLmFkZHNsYXNoZXMoJG5vdGlmeV91cmwpLiciLCAiJy5hZGRz
bGFzaGVzKCRwcm90b2NvbCkuJyIsICInLmFkZHNsYXNoZXMoJHN0YXR1cykuJyIsICInLmFk
ZHNsYXNoZXMoJGZhaWx1cmVfY291bnQpLiciKScpOwoJCQkJCSR0aGlzLT5ub3RpZnlfcmVz
dWx0KCd0cnVlJywgJ1JlZ2lzdHJhdGlvbiBzdWNjZXNzZnVsLicpOwoJCQkJfSBlbHNlIHsK
CQkJCQkvLyBhbHJlYWR5IHJlZ2lzdGVyZWQgZm9yIHBpbmdzCgkJCQkJJHRoaXMtPm5vdGlm
eV9yZXN1bHQoJ3RydWUnLCAnUmVnaXN0cmF0aW9uIGZvciB0aGF0IGZlZWQvbm90aWZ5IFVS
TCBhbHJlYWR5IGV4aXN0cy4nKTsKCQkJCX0KCQkJfQoJCQkkaSsrOwoJCX0KCX0gLy8gZnVu
Y3Rpb24gaHViX25vdGlmeQoKCgkvKiBJbnN0YWxsIEdvZXMgSGVyZSAqLwoJZnVuY3Rpb24g
aW5zdGFsbCgpIHsKCQlzYWZlX3F1ZXJ5KCdERUxFVEUgRlJPTSAnLnNhZmVfcGZ4KCd0eHBf
cHJlZnMnKS4nIFdIRVJFIG5hbWUgTElLRSAid2xrX3Jzc2Nsb3VkXyUiJyk7CgkJc2FmZV9p
bnNlcnQoJ3R4cF9wcmVmcycsInByZWZzX2lkID0gJzEnLG5hbWUgPSAnd2xrX3Jzc2Nsb3Vk
X25vdGlmaWNhdGlvbnNfaW5zdGFudCcsdmFsID0gJzEnLHR5cGUgPSAnMScsZXZlbnQgPSAn
d2xrX3Jzc2Nsb3VkJyxodG1sID0gJ3llc25vcmFkaW8nLHBvc2l0aW9uID0gJzEwJyx1c2Vy
X25hbWUgPSAnJyIpOwoJCXNhZmVfaW5zZXJ0KCd0eHBfcHJlZnMnLCJwcmVmc19pZCA9ICcx
JyxuYW1lID0gJ3dsa19yc3NjbG91ZF9tYXhfZmFpbHVyZXMnLHZhbCA9ICcwJyx0eXBlID0g
JzEnLGV2ZW50ID0gJ3dsa19yc3NjbG91ZCcsaHRtbCA9ICd3bGtfcnNzY2xvdWRfZmFpbHVy
ZXMnLHBvc2l0aW9uID0gJzIwJyx1c2VyX25hbWUgPSAnJyIpOwoJCXNhZmVfaW5zZXJ0KCd0
eHBfcHJlZnMnLCJwcmVmc19pZCA9ICcxJyxuYW1lID0gJ3dsa19yc3NjbG91ZF90aW1lb3V0
Jyx2YWwgPSAnMycsdHlwZSA9ICcxJyxldmVudCA9ICd3bGtfcnNzY2xvdWQnLGh0bWwgPSAn
dGV4dF9pbnB1dCcscG9zaXRpb24gPSAnMzAnLHVzZXJfbmFtZSA9ICcnIik7CgkJc2FmZV9p
bnNlcnQoJ3R4cF9wcmVmcycsInByZWZzX2lkID0gJzEnLG5hbWUgPSAnd2xrX3Jzc2Nsb3Vk
X3VzZXJfYWdlbnQnLHZhbCA9ICdUZXh0cGF0dGVybi9SU1MgQ2xvdWQgMC4yJyx0eXBlID0g
JzEnLGV2ZW50ID0gJ3dsa19yc3NjbG91ZCcsaHRtbCA9ICd0ZXh0X2lucHV0Jyxwb3NpdGlv
biA9ICc0MCcsdXNlcl9uYW1lID0gJyciKTsKCQlzYWZlX2luc2VydCgndHhwX3ByZWZzJywi
cHJlZnNfaWQgPSAnMScsbmFtZSA9ICd3bGtfcnNzY2xvdWRfZmVlZHMnLHZhbCA9ICdzdGFu
ZGFyZCcsdHlwZSA9ICcxJyxldmVudCA9ICd3bGtfcnNzY2xvdWQnLGh0bWwgPSAnd2xrX3Jz
c2Nsb3VkX2ZlZWRzJyxwb3NpdGlvbiA9ICc1MCcsdXNlcl9uYW1lID0gJyciKTsKCQlzYWZl
X2luc2VydCgndHhwX3ByZWZzJywicHJlZnNfaWQgPSAnMScsbmFtZSA9ICd3bGtfcnNzY2xv
dWRfY3VzdG9tX3VybCcsdmFsID0gJycsdHlwZSA9ICcxJyxldmVudCA9ICd3bGtfcnNzY2xv
dWQnLGh0bWwgPSAndGV4dF9pbnB1dCcscG9zaXRpb24gPSAnNjAnLHVzZXJfbmFtZSA9ICcn
Iik7CgkJc2FmZV9xdWVyeSgiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgYCIuc2FmZV9w
ZngoJ3R4cF9yc3NjbG91ZF9ub3RpZmljYXRpb25zJykuImAgKAoJCQlgaWRgIElOVCggMTEg
KSBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCBQUklNQVJZIEtFWSAsCgkJCWBmZWVkX3VybGAg
VkFSQ0hBUiggMjU1ICkgTk9UIE5VTEwgLAoJCQlgbm90aWZ5X3VybGAgVkFSQ0hBUiggMjU1
ICkgTk9UIE5VTEwgLAoJCQlgcHJvdG9jb2xgIFZBUkNIQVIoIDIwICkgTk9UIE5VTEwgREVG
QVVMVCAgJ2h0dHAtcG9zdCcsCgkJCWBzdGF0dXNgIFZBUkNIQVIoIDIwICkgTk9UIE5VTEwg
REVGQVVMVCAgJ2FjdGl2ZScsCgkJCWBmYWlsX2NvdW50YCBUSU5ZSU5UKCA0ICkgTk9UIE5V
TEwgREVGQVVMVCAgJzAnLAoJCQlJTkRFWCAoICBgZmVlZF91cmxgICkKCQkpIEVOR0lORSA9
IE1ZSVNBTSIpOwoJfQoKCWZ1bmN0aW9uIGRlbGV0ZSgpIHsKCQlzYWZlX2RlbGV0ZSgndHhw
X3ByZWZzJywibmFtZSBMSUtFICd3bGtfcnNzY2xvdWRfJSciKTsKCQlzYWZlX3F1ZXJ5KCdE
Uk9QIFRBQkxFIElGIEVYSVNUUyBgJy5zYWZlX3BmeCgndHhwX3Jzc2Nsb3VkX25vdGlmaWNh
dGlvbnMnKS4nYCcpOwoJfQp9CiI7czozOiJtZDUiO3M6MzI6ImVlN2QxOWMzZDMyZmJmNmVm
MjNkYzM4Y2JjNjcyYTZkIjt9